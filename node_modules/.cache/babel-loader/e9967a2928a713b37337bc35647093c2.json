{"ast":null,"code":"import usePortal from '../utils/use-portal';\nimport useWarning from '../utils/use-warning';\nimport { useCallback } from 'react';\nvar defaultOptions = {\n  onError: function onError() {\n    return useWarning('Failed to copy.', 'use-clipboard');\n  }\n};\n\nvar useClipboard = function useClipboard() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n  var el = usePortal('clipboard');\n\n  var copyText = function copyText(el, text) {\n    if (!el || !text) return;\n    var selection = window.getSelection();\n    if (!selection) return;\n    el.style.whiteSpace = 'pre';\n    el.textContent = text;\n    var range = window.document.createRange();\n    selection.removeAllRanges();\n    range.selectNode(el);\n    selection.addRange(range);\n\n    try {\n      window.document.execCommand('copy');\n    } catch (e) {\n      options.onError && options.onError();\n    }\n\n    selection.removeAllRanges();\n\n    if (el) {\n      el.textContent = '';\n    }\n  };\n\n  var copy = useCallback(function (text) {\n    copyText(el, text);\n  }, [el]);\n  return {\n    copy: copy\n  };\n};\n\nexport default useClipboard;","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/core-l/node_modules/@geist-ui/react/esm/use-clipboard/use-clipboard.js"],"names":["usePortal","useWarning","useCallback","defaultOptions","onError","useClipboard","options","arguments","length","undefined","el","copyText","text","selection","window","getSelection","style","whiteSpace","textContent","range","document","createRange","removeAllRanges","selectNode","addRange","execCommand","e","copy"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,qBAAtB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,WAAOH,UAAU,CAAC,iBAAD,EAAoB,eAApB,CAAjB;AACD;AAHkB,CAArB;;AAMA,IAAII,YAAY,GAAG,SAASA,YAAT,GAAwB;AACzC,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEJ,cAAlF;AACA,MAAIO,EAAE,GAAGV,SAAS,CAAC,WAAD,CAAlB;;AAEA,MAAIW,QAAQ,GAAG,SAASA,QAAT,CAAkBD,EAAlB,EAAsBE,IAAtB,EAA4B;AACzC,QAAI,CAACF,EAAD,IAAO,CAACE,IAAZ,EAAkB;AAClB,QAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,EAAhB;AACA,QAAI,CAACF,SAAL,EAAgB;AAChBH,IAAAA,EAAE,CAACM,KAAH,CAASC,UAAT,GAAsB,KAAtB;AACAP,IAAAA,EAAE,CAACQ,WAAH,GAAiBN,IAAjB;AACA,QAAIO,KAAK,GAAGL,MAAM,CAACM,QAAP,CAAgBC,WAAhB,EAAZ;AACAR,IAAAA,SAAS,CAACS,eAAV;AACAH,IAAAA,KAAK,CAACI,UAAN,CAAiBb,EAAjB;AACAG,IAAAA,SAAS,CAACW,QAAV,CAAmBL,KAAnB;;AAEA,QAAI;AACFL,MAAAA,MAAM,CAACM,QAAP,CAAgBK,WAAhB,CAA4B,MAA5B;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACVpB,MAAAA,OAAO,CAACF,OAAR,IAAmBE,OAAO,CAACF,OAAR,EAAnB;AACD;;AAEDS,IAAAA,SAAS,CAACS,eAAV;;AAEA,QAAIZ,EAAJ,EAAQ;AACNA,MAAAA,EAAE,CAACQ,WAAH,GAAiB,EAAjB;AACD;AACF,GAtBD;;AAwBA,MAAIS,IAAI,GAAGzB,WAAW,CAAC,UAAUU,IAAV,EAAgB;AACrCD,IAAAA,QAAQ,CAACD,EAAD,EAAKE,IAAL,CAAR;AACD,GAFqB,EAEnB,CAACF,EAAD,CAFmB,CAAtB;AAGA,SAAO;AACLiB,IAAAA,IAAI,EAAEA;AADD,GAAP;AAGD,CAlCD;;AAoCA,eAAetB,YAAf","sourcesContent":["import usePortal from '../utils/use-portal';\nimport useWarning from '../utils/use-warning';\nimport { useCallback } from 'react';\nvar defaultOptions = {\n  onError: function onError() {\n    return useWarning('Failed to copy.', 'use-clipboard');\n  }\n};\n\nvar useClipboard = function useClipboard() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultOptions;\n  var el = usePortal('clipboard');\n\n  var copyText = function copyText(el, text) {\n    if (!el || !text) return;\n    var selection = window.getSelection();\n    if (!selection) return;\n    el.style.whiteSpace = 'pre';\n    el.textContent = text;\n    var range = window.document.createRange();\n    selection.removeAllRanges();\n    range.selectNode(el);\n    selection.addRange(range);\n\n    try {\n      window.document.execCommand('copy');\n    } catch (e) {\n      options.onError && options.onError();\n    }\n\n    selection.removeAllRanges();\n\n    if (el) {\n      el.textContent = '';\n    }\n  };\n\n  var copy = useCallback(function (text) {\n    copyText(el, text);\n  }, [el]);\n  return {\n    copy: copy\n  };\n};\n\nexport default useClipboard;"]},"metadata":{},"sourceType":"module"}