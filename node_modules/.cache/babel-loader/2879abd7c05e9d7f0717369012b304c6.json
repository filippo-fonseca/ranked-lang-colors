{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport var getStyles = function getStyles(type, palette, isShadow) {\n  var colors = {\n    \"default\": {\n      color: palette.foreground,\n      bgColor: palette.background\n    },\n    dark: {\n      color: palette.background,\n      bgColor: palette.foreground\n    },\n    secondary: {\n      color: palette.background,\n      bgColor: palette.secondary\n    },\n    success: {\n      color: palette.background,\n      bgColor: palette.success\n    },\n    warning: {\n      color: palette.background,\n      bgColor: palette.warning\n    },\n    error: {\n      color: palette.background,\n      bgColor: palette.error\n    },\n    lite: {\n      color: palette.foreground,\n      bgColor: palette.background\n    },\n    alert: {\n      color: 'white',\n      bgColor: palette.alert\n    },\n    purple: {\n      color: 'white',\n      bgColor: palette.purple\n    },\n    violet: {\n      color: 'white',\n      bgColor: palette.violet\n    },\n    cyan: {\n      color: 'black',\n      bgColor: palette.cyan\n    }\n  };\n  var showBorder = type === 'default' && !isShadow;\n  return _extends({}, colors[type], {\n    borderColor: showBorder ? palette.border : 'transparent'\n  });\n};","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/core-l/node_modules/@geist-ui/react/esm/card/styles.js"],"names":["_extends","getStyles","type","palette","isShadow","colors","color","foreground","bgColor","background","dark","secondary","success","warning","error","lite","alert","purple","violet","cyan","showBorder","borderColor","border"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,IAAnB,EAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;AACjE,MAAIC,MAAM,GAAG;AACX,eAAW;AACTC,MAAAA,KAAK,EAAEH,OAAO,CAACI,UADN;AAETC,MAAAA,OAAO,EAAEL,OAAO,CAACM;AAFR,KADA;AAKXC,IAAAA,IAAI,EAAE;AACJJ,MAAAA,KAAK,EAAEH,OAAO,CAACM,UADX;AAEJD,MAAAA,OAAO,EAAEL,OAAO,CAACI;AAFb,KALK;AASXI,IAAAA,SAAS,EAAE;AACTL,MAAAA,KAAK,EAAEH,OAAO,CAACM,UADN;AAETD,MAAAA,OAAO,EAAEL,OAAO,CAACQ;AAFR,KATA;AAaXC,IAAAA,OAAO,EAAE;AACPN,MAAAA,KAAK,EAAEH,OAAO,CAACM,UADR;AAEPD,MAAAA,OAAO,EAAEL,OAAO,CAACS;AAFV,KAbE;AAiBXC,IAAAA,OAAO,EAAE;AACPP,MAAAA,KAAK,EAAEH,OAAO,CAACM,UADR;AAEPD,MAAAA,OAAO,EAAEL,OAAO,CAACU;AAFV,KAjBE;AAqBXC,IAAAA,KAAK,EAAE;AACLR,MAAAA,KAAK,EAAEH,OAAO,CAACM,UADV;AAELD,MAAAA,OAAO,EAAEL,OAAO,CAACW;AAFZ,KArBI;AAyBXC,IAAAA,IAAI,EAAE;AACJT,MAAAA,KAAK,EAAEH,OAAO,CAACI,UADX;AAEJC,MAAAA,OAAO,EAAEL,OAAO,CAACM;AAFb,KAzBK;AA6BXO,IAAAA,KAAK,EAAE;AACLV,MAAAA,KAAK,EAAE,OADF;AAELE,MAAAA,OAAO,EAAEL,OAAO,CAACa;AAFZ,KA7BI;AAiCXC,IAAAA,MAAM,EAAE;AACNX,MAAAA,KAAK,EAAE,OADD;AAENE,MAAAA,OAAO,EAAEL,OAAO,CAACc;AAFX,KAjCG;AAqCXC,IAAAA,MAAM,EAAE;AACNZ,MAAAA,KAAK,EAAE,OADD;AAENE,MAAAA,OAAO,EAAEL,OAAO,CAACe;AAFX,KArCG;AAyCXC,IAAAA,IAAI,EAAE;AACJb,MAAAA,KAAK,EAAE,OADH;AAEJE,MAAAA,OAAO,EAAEL,OAAO,CAACgB;AAFb;AAzCK,GAAb;AA8CA,MAAIC,UAAU,GAAGlB,IAAI,KAAK,SAAT,IAAsB,CAACE,QAAxC;AACA,SAAOJ,QAAQ,CAAC,EAAD,EAAKK,MAAM,CAACH,IAAD,CAAX,EAAmB;AAChCmB,IAAAA,WAAW,EAAED,UAAU,GAAGjB,OAAO,CAACmB,MAAX,GAAoB;AADX,GAAnB,CAAf;AAGD,CAnDM","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport var getStyles = function getStyles(type, palette, isShadow) {\n  var colors = {\n    \"default\": {\n      color: palette.foreground,\n      bgColor: palette.background\n    },\n    dark: {\n      color: palette.background,\n      bgColor: palette.foreground\n    },\n    secondary: {\n      color: palette.background,\n      bgColor: palette.secondary\n    },\n    success: {\n      color: palette.background,\n      bgColor: palette.success\n    },\n    warning: {\n      color: palette.background,\n      bgColor: palette.warning\n    },\n    error: {\n      color: palette.background,\n      bgColor: palette.error\n    },\n    lite: {\n      color: palette.foreground,\n      bgColor: palette.background\n    },\n    alert: {\n      color: 'white',\n      bgColor: palette.alert\n    },\n    purple: {\n      color: 'white',\n      bgColor: palette.purple\n    },\n    violet: {\n      color: 'white',\n      bgColor: palette.violet\n    },\n    cyan: {\n      color: 'black',\n      bgColor: palette.cyan\n    }\n  };\n  var showBorder = type === 'default' && !isShadow;\n  return _extends({}, colors[type], {\n    borderColor: showBorder ? palette.border : 'transparent'\n  });\n};"]},"metadata":{},"sourceType":"module"}