{"ast":null,"code":"\"use strict\";\n\nfunction hash(str) {\n  var hash = 5381,\n      i = str.length;\n\n  while (i) {\n    hash = hash * 33 ^ str.charCodeAt(--i);\n  }\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n\n\n  return hash >>> 0;\n}\n\nmodule.exports = hash;","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/core-l/node_modules/string-hash/index.js"],"names":["hash","str","i","length","charCodeAt","module","exports"],"mappings":"AAAA;;AAEA,SAASA,IAAT,CAAcC,GAAd,EAAmB;AACjB,MAAID,IAAI,GAAG,IAAX;AAAA,MACIE,CAAC,GAAMD,GAAG,CAACE,MADf;;AAGA,SAAMD,CAAN,EAAS;AACPF,IAAAA,IAAI,GAAIA,IAAI,GAAG,EAAR,GAAcC,GAAG,CAACG,UAAJ,CAAe,EAAEF,CAAjB,CAArB;AACD;AAED;AACF;AACA;;;AACE,SAAOF,IAAI,KAAK,CAAhB;AACD;;AAEDK,MAAM,CAACC,OAAP,GAAiBN,IAAjB","sourcesContent":["\"use strict\";\n\nfunction hash(str) {\n  var hash = 5381,\n      i    = str.length;\n\n  while(i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return hash >>> 0;\n}\n\nmodule.exports = hash;\n"]},"metadata":{},"sourceType":"script"}