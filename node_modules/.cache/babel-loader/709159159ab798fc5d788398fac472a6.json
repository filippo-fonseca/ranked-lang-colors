{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/filippofonseca/Developer/open-source/ranked-lang-colors/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { CircularProgress } from '@material-ui/core';\nimport \"./App.css\";\nimport { Card, Text, Button, Code, GeistProvider, CssBaseline } from \"@geist-ui/react\";\nimport { ArrowUp } from \"@geist-ui/react-icons\";\nimport { Container, ColorCircle, RankArea, LangArea } from \"../src/styles\";\nconst GET_TODOS = gql`\n  query getLangs {\n      languages {\n          id\n          name\n          hex\n      }\n  } \n`;\n\nconst App = () => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_TODOS);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: 50\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        h4: true,\n        children: \"Fetching data from API...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error fetching colors\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.languages.map(language => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          width: \"330px\",\n          style: {\n            backgroundColor: `${language.hex}`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: language.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/src/App.js"],"names":["React","useQuery","gql","CircularProgress","Card","Text","Button","Code","GeistProvider","CssBaseline","ArrowUp","Container","ColorCircle","RankArea","LangArea","GET_TODOS","App","data","loading","error","display","flexDirection","alignItems","marginTop","languages","map","language","backgroundColor","hex","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAO,WAAP;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,IAJF,EAKEC,aALF,EAMEC,WANF,QAOO,iBAPP;AAQA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,QAAjC,EAA2CC,QAA3C,QAA2D,eAA3D;AAGA,MAAMC,SAAS,GAAGb,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,MAAMc,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BlB,QAAQ,CAACc,SAAD,CAAzC;;AAEA,MAAIG,OAAJ,EAAa;AACX,wBACI;AAAK,MAAA,KAAK,EAAE;AACRE,QAAAA,OAAO,EAAE,MADD;AAERC,QAAAA,aAAa,EAAE,QAFP;AAGRC,QAAAA,UAAU,EAAE,QAHJ;AAIRC,QAAAA,SAAS,EAAE;AAJH,OAAZ;AAAA,8BAMI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,IAAD;AAAM,QAAA,EAAE,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWD;;AACD,MAAIJ,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGX,sBACE;AAAA,2BACA;AAAA,gBACCF,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAmBC,QAAQ,iBAC1B;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,OAAZ;AAAoB,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAG,GAAED,QAAQ,CAACE,GAAI;AAAnC,WAA3B;AAAA,iCACF;AAAA,sBAAKF,QAAQ,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA;AADA,uBADD;AADD;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAcD,CAjCD;;GAAMb,G;UAC6Bf,Q;;;KAD7Be,G;AAmCN,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { CircularProgress } from '@material-ui/core';\nimport \"./App.css\";\nimport {\n  Card,\n  Text,\n  Button,\n  Code,\n  GeistProvider,\n  CssBaseline\n} from \"@geist-ui/react\";\nimport { ArrowUp } from \"@geist-ui/react-icons\";\nimport { Container, ColorCircle, RankArea, LangArea } from \"../src/styles\";\n\n\nconst GET_TODOS = gql`\n  query getLangs {\n      languages {\n          id\n          name\n          hex\n      }\n  } \n`\n\nconst App = () => {\n  const { data, loading, error } = useQuery(GET_TODOS);\n\n  if (loading) {\n    return (\n        <div style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            marginTop: 50\n        }}>\n            <CircularProgress/>\n            <Text h4>Fetching data from API...</Text>\n        </div>\n    );\n  } \n  if (error) return <div>Error fetching colors</div>\n\n\n  return (\n    <>\n    <div>\n    {data.languages.map(language => (\n      <>\n      <Card width=\"330px\" style={{ backgroundColor: `${language.hex}`}}>\n    <h4>{language.name}</h4>\n    </Card>\n       </>))}\n\n    </div>\n    </>\n    \n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}