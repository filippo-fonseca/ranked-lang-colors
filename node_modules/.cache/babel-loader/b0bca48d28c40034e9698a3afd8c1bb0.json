{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\nexport var getRealShape = function getRealShape(el) {\n  var defaultShape = {\n    width: 0,\n    height: 0\n  };\n  if (!el || typeof window === 'undefined') return defaultShape;\n  var rect = el.getBoundingClientRect();\n\n  var _window$getComputedSt = window.getComputedStyle(el),\n      width = _window$getComputedSt.width,\n      height = _window$getComputedSt.height;\n\n  var getCSSStyleVal = function getCSSStyleVal(str, parentNum) {\n    if (!str) return 0;\n    var strVal = str.includes('px') ? +str.split('px')[0] : str.includes('%') ? +str.split('%')[0] * parentNum * 0.01 : str;\n    return Number.isNaN(+strVal) ? 0 : +strVal;\n  };\n\n  return {\n    width: getCSSStyleVal(\"\".concat(width), rect.width),\n    height: getCSSStyleVal(\"\".concat(height), rect.height)\n  };\n};\n\nvar useRealShape = function useRealShape(ref) {\n  var _useState = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var update = function update() {\n    var _getRealShape = getRealShape(ref.current),\n        width = _getRealShape.width,\n        height = _getRealShape.height;\n\n    setState({\n      width: width,\n      height: height\n    });\n  };\n\n  useEffect(function () {\n    return update();\n  }, [ref.current]);\n  return [state, update];\n};\n\nexport default useRealShape;","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/core-l/node_modules/@geist-ui/react/esm/utils/use-real-shape.js"],"names":["_slicedToArray","useEffect","useState","getRealShape","el","defaultShape","width","height","window","rect","getBoundingClientRect","_window$getComputedSt","getComputedStyle","getCSSStyleVal","str","parentNum","strVal","includes","split","Number","isNaN","concat","useRealShape","ref","_useState","_useState2","state","setState","update","_getRealShape","current"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,EAAtB,EAA0B;AAClD,MAAIC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,CADU;AAEjBC,IAAAA,MAAM,EAAE;AAFS,GAAnB;AAIA,MAAI,CAACH,EAAD,IAAO,OAAOI,MAAP,KAAkB,WAA7B,EAA0C,OAAOH,YAAP;AAC1C,MAAII,IAAI,GAAGL,EAAE,CAACM,qBAAH,EAAX;;AAEA,MAAIC,qBAAqB,GAAGH,MAAM,CAACI,gBAAP,CAAwBR,EAAxB,CAA5B;AAAA,MACIE,KAAK,GAAGK,qBAAqB,CAACL,KADlC;AAAA,MAEIC,MAAM,GAAGI,qBAAqB,CAACJ,MAFnC;;AAIA,MAAIM,cAAc,GAAG,SAASA,cAAT,CAAwBC,GAAxB,EAA6BC,SAA7B,EAAwC;AAC3D,QAAI,CAACD,GAAL,EAAU,OAAO,CAAP;AACV,QAAIE,MAAM,GAAGF,GAAG,CAACG,QAAJ,CAAa,IAAb,IAAqB,CAACH,GAAG,CAACI,KAAJ,CAAU,IAAV,EAAgB,CAAhB,CAAtB,GAA2CJ,GAAG,CAACG,QAAJ,CAAa,GAAb,IAAoB,CAACH,GAAG,CAACI,KAAJ,CAAU,GAAV,EAAe,CAAf,CAAD,GAAqBH,SAArB,GAAiC,IAArD,GAA4DD,GAApH;AACA,WAAOK,MAAM,CAACC,KAAP,CAAa,CAACJ,MAAd,IAAwB,CAAxB,GAA4B,CAACA,MAApC;AACD,GAJD;;AAMA,SAAO;AACLV,IAAAA,KAAK,EAAEO,cAAc,CAAC,GAAGQ,MAAH,CAAUf,KAAV,CAAD,EAAmBG,IAAI,CAACH,KAAxB,CADhB;AAELC,IAAAA,MAAM,EAAEM,cAAc,CAAC,GAAGQ,MAAH,CAAUd,MAAV,CAAD,EAAoBE,IAAI,CAACF,MAAzB;AAFjB,GAAP;AAID,CAtBM;;AAwBP,IAAIe,YAAY,GAAG,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;AAC5C,MAAIC,SAAS,GAAGtB,QAAQ,CAAC;AACvBI,IAAAA,KAAK,EAAE,CADgB;AAEvBC,IAAAA,MAAM,EAAE;AAFe,GAAD,CAAxB;AAAA,MAIIkB,UAAU,GAAGzB,cAAc,CAACwB,SAAD,EAAY,CAAZ,CAJ/B;AAAA,MAKIE,KAAK,GAAGD,UAAU,CAAC,CAAD,CALtB;AAAA,MAMIE,QAAQ,GAAGF,UAAU,CAAC,CAAD,CANzB;;AAQA,MAAIG,MAAM,GAAG,SAASA,MAAT,GAAkB;AAC7B,QAAIC,aAAa,GAAG1B,YAAY,CAACoB,GAAG,CAACO,OAAL,CAAhC;AAAA,QACIxB,KAAK,GAAGuB,aAAa,CAACvB,KAD1B;AAAA,QAEIC,MAAM,GAAGsB,aAAa,CAACtB,MAF3B;;AAIAoB,IAAAA,QAAQ,CAAC;AACPrB,MAAAA,KAAK,EAAEA,KADA;AAEPC,MAAAA,MAAM,EAAEA;AAFD,KAAD,CAAR;AAID,GATD;;AAWAN,EAAAA,SAAS,CAAC,YAAY;AACpB,WAAO2B,MAAM,EAAb;AACD,GAFQ,EAEN,CAACL,GAAG,CAACO,OAAL,CAFM,CAAT;AAGA,SAAO,CAACJ,KAAD,EAAQE,MAAR,CAAP;AACD,CAxBD;;AA0BA,eAAeN,YAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\nexport var getRealShape = function getRealShape(el) {\n  var defaultShape = {\n    width: 0,\n    height: 0\n  };\n  if (!el || typeof window === 'undefined') return defaultShape;\n  var rect = el.getBoundingClientRect();\n\n  var _window$getComputedSt = window.getComputedStyle(el),\n      width = _window$getComputedSt.width,\n      height = _window$getComputedSt.height;\n\n  var getCSSStyleVal = function getCSSStyleVal(str, parentNum) {\n    if (!str) return 0;\n    var strVal = str.includes('px') ? +str.split('px')[0] : str.includes('%') ? +str.split('%')[0] * parentNum * 0.01 : str;\n    return Number.isNaN(+strVal) ? 0 : +strVal;\n  };\n\n  return {\n    width: getCSSStyleVal(\"\".concat(width), rect.width),\n    height: getCSSStyleVal(\"\".concat(height), rect.height)\n  };\n};\n\nvar useRealShape = function useRealShape(ref) {\n  var _useState = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var update = function update() {\n    var _getRealShape = getRealShape(ref.current),\n        width = _getRealShape.width,\n        height = _getRealShape.height;\n\n    setState({\n      width: width,\n      height: height\n    });\n  };\n\n  useEffect(function () {\n    return update();\n  }, [ref.current]);\n  return [state, update];\n};\n\nexport default useRealShape;"]},"metadata":{},"sourceType":"module"}