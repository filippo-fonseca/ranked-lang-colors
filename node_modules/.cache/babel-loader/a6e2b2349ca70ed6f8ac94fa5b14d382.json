{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useRef } from 'react';\nimport useCurrentState from './use-current-state';\n\nvar useDrag = function useDrag(elementRef) {\n  var draggingHandler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n  var dragStartHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n  var dragEndHandler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n  var onDragging = useRef(false);\n\n  var _useCurrentState = useCurrentState(0),\n      _useCurrentState2 = _slicedToArray(_useCurrentState, 3),\n      setStartX = _useCurrentState2[1],\n      startXRef = _useCurrentState2[2];\n\n  var _useCurrentState3 = useCurrentState(0),\n      _useCurrentState4 = _slicedToArray(_useCurrentState3, 3),\n      setCurrentX = _useCurrentState4[1],\n      currentXRef = _useCurrentState4[2];\n\n  var getCustomEvent = function getCustomEvent() {\n    return {\n      startX: startXRef.current,\n      currentX: currentXRef.current\n    };\n  };\n\n  var elementMouseDownHandler = function elementMouseDownHandler(event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    onDragging.current = true;\n    if (!elementRef || !elementRef.current) return;\n    setStartX(elementRef.current.getBoundingClientRect().x);\n    dragStartHandler(getCustomEvent());\n  };\n\n  var globalDraggingHandler = function globalDraggingHandler(event) {\n    if (!onDragging.current) return;\n\n    if (event.type === 'touchmove') {\n      setCurrentX(event.changedTouches[0].clientX);\n    } else {\n      setCurrentX(event.clientX);\n    }\n\n    draggingHandler(getCustomEvent());\n  };\n\n  var globalDragEndHandler = function globalDragEndHandler() {\n    if (!onDragging.current) return;\n    onDragging.current = false;\n    dragEndHandler(getCustomEvent());\n  };\n\n  useEffect(function () {\n    if (!elementRef || !elementRef.current) return;\n    elementRef.current.addEventListener('mousedown', elementMouseDownHandler);\n    elementRef.current.addEventListener('touchstart', elementMouseDownHandler);\n    window.addEventListener('mousemove', globalDraggingHandler);\n    window.addEventListener('touchmove', globalDraggingHandler);\n    window.addEventListener('mouseup', globalDragEndHandler);\n    window.addEventListener('touchend', globalDragEndHandler);\n    return function () {\n      window.removeEventListener('mousemove', globalDraggingHandler);\n      window.removeEventListener('touchmove', globalDraggingHandler);\n      window.removeEventListener('mouseup', globalDragEndHandler);\n      window.removeEventListener('touchend', globalDragEndHandler);\n      if (!elementRef || !elementRef.current) return;\n      elementRef.current.removeEventListener('mousedown', elementMouseDownHandler);\n      elementRef.current.removeEventListener('touchstart', elementMouseDownHandler);\n    };\n  }, [elementRef]);\n};\n\nexport default useDrag;","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/core-l/node_modules/@geist-ui/react/esm/utils/use-drag.js"],"names":["_slicedToArray","useEffect","useRef","useCurrentState","useDrag","elementRef","draggingHandler","arguments","length","undefined","dragStartHandler","dragEndHandler","onDragging","_useCurrentState","_useCurrentState2","setStartX","startXRef","_useCurrentState3","_useCurrentState4","setCurrentX","currentXRef","getCustomEvent","startX","current","currentX","elementMouseDownHandler","event","stopPropagation","stopImmediatePropagation","getBoundingClientRect","x","globalDraggingHandler","type","changedTouches","clientX","globalDragEndHandler","addEventListener","window","removeEventListener"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useRef } from 'react';\nimport useCurrentState from './use-current-state';\n\nvar useDrag = function useDrag(elementRef) {\n  var draggingHandler = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n  var dragStartHandler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function () {};\n  var dragEndHandler = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function () {};\n  var onDragging = useRef(false);\n\n  var _useCurrentState = useCurrentState(0),\n      _useCurrentState2 = _slicedToArray(_useCurrentState, 3),\n      setStartX = _useCurrentState2[1],\n      startXRef = _useCurrentState2[2];\n\n  var _useCurrentState3 = useCurrentState(0),\n      _useCurrentState4 = _slicedToArray(_useCurrentState3, 3),\n      setCurrentX = _useCurrentState4[1],\n      currentXRef = _useCurrentState4[2];\n\n  var getCustomEvent = function getCustomEvent() {\n    return {\n      startX: startXRef.current,\n      currentX: currentXRef.current\n    };\n  };\n\n  var elementMouseDownHandler = function elementMouseDownHandler(event) {\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    onDragging.current = true;\n    if (!elementRef || !elementRef.current) return;\n    setStartX(elementRef.current.getBoundingClientRect().x);\n    dragStartHandler(getCustomEvent());\n  };\n\n  var globalDraggingHandler = function globalDraggingHandler(event) {\n    if (!onDragging.current) return;\n\n    if (event.type === 'touchmove') {\n      setCurrentX(event.changedTouches[0].clientX);\n    } else {\n      setCurrentX(event.clientX);\n    }\n\n    draggingHandler(getCustomEvent());\n  };\n\n  var globalDragEndHandler = function globalDragEndHandler() {\n    if (!onDragging.current) return;\n    onDragging.current = false;\n    dragEndHandler(getCustomEvent());\n  };\n\n  useEffect(function () {\n    if (!elementRef || !elementRef.current) return;\n    elementRef.current.addEventListener('mousedown', elementMouseDownHandler);\n    elementRef.current.addEventListener('touchstart', elementMouseDownHandler);\n    window.addEventListener('mousemove', globalDraggingHandler);\n    window.addEventListener('touchmove', globalDraggingHandler);\n    window.addEventListener('mouseup', globalDragEndHandler);\n    window.addEventListener('touchend', globalDragEndHandler);\n    return function () {\n      window.removeEventListener('mousemove', globalDraggingHandler);\n      window.removeEventListener('touchmove', globalDraggingHandler);\n      window.removeEventListener('mouseup', globalDragEndHandler);\n      window.removeEventListener('touchend', globalDragEndHandler);\n      if (!elementRef || !elementRef.current) return;\n      elementRef.current.removeEventListener('mousedown', elementMouseDownHandler);\n      elementRef.current.removeEventListener('touchstart', elementMouseDownHandler);\n    };\n  }, [elementRef]);\n};\n\nexport default useDrag;"]},"metadata":{},"sourceType":"module"}