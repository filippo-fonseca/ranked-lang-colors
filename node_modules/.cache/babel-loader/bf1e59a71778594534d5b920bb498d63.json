{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useMemo, useState } from 'react';\nimport useTheme from '../use-theme';\nimport { tuple } from '../utils/prop-types';\nvar breakpoints = tuple('xs', 'sm', 'md', 'lg', 'xl', 'mobile');\nvar matchType = tuple('up', 'down', 'default');\nvar defaultResponsiveOptions = {\n  match: 'default'\n};\n\nvar makeQueries = function makeQueries(bp, up, down) {\n  var queryString = function queryString(item) {\n    var upQuery = \"(min-width: \".concat(item.min, \")\");\n    var downQuery = \"(max-width: \".concat(item.max, \")\");\n    return up ? upQuery : down ? downQuery : \"\".concat(upQuery, \" and \").concat(downQuery);\n  };\n\n  var xs = queryString(bp.xs);\n  return {\n    xs: xs,\n    mobile: xs,\n    sm: queryString(bp.sm),\n    md: queryString(bp.md),\n    lg: queryString(bp.lg),\n    xl: queryString(bp.xl)\n  };\n};\n\nvar useMediaQuery = function useMediaQuery(breakpoint) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultResponsiveOptions;\n  var _options$match = options.match,\n      matchType = _options$match === void 0 ? 'default' : _options$match,\n      _options$ssrMatchMedi = options.ssrMatchMedia,\n      ssrMatchMedia = _options$ssrMatchMedi === void 0 ? null : _options$ssrMatchMedi;\n  var supportMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  var theme = useTheme();\n  var mediaQueries = useMemo(function () {\n    var up = matchType === 'up';\n    var down = matchType === 'down';\n    return makeQueries(theme.breakpoints, up, down);\n  }, [theme.breakpoints, options]);\n  var query = useMemo(function () {\n    return mediaQueries[breakpoint];\n  }, [mediaQueries, breakpoint]);\n\n  var matchQuery = function matchQuery(q) {\n    return window.matchMedia(q);\n  };\n  /**\n   * Do nothing in the server-side rendering.\n   * If server match query fucntion is simulated, return user-defined value first.\n   */\n\n\n  var _useState = useState(function () {\n    if (supportMedia) return matchQuery(query).matches;\n\n    if (ssrMatchMedia && typeof ssrMatchMedia === 'function') {\n      return ssrMatchMedia(query).matches;\n    }\n\n    return false;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    if (!supportMedia) return;\n    var queryList = matchQuery(query);\n\n    var update = function update() {\n      return setState(matchQuery(query).matches);\n    };\n\n    update();\n    /**\n     * addListener is deprecated. EventTarget.addEventListener is recommended.\n     * But in some old browsers, MediaQueryList does not inherit from EventTarget.\n     */\n\n    queryList.addListener(update);\n    return function () {\n      queryList.removeListener(update);\n    };\n  }, [supportMedia]);\n  return state;\n};\n\nexport default useMediaQuery;","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/core-l/node_modules/@geist-ui/react/esm/use-media-query/use-media-query.js"],"names":["_slicedToArray","useEffect","useMemo","useState","useTheme","tuple","breakpoints","matchType","defaultResponsiveOptions","match","makeQueries","bp","up","down","queryString","item","upQuery","concat","min","downQuery","max","xs","mobile","sm","md","lg","xl","useMediaQuery","breakpoint","options","arguments","length","undefined","_options$match","_options$ssrMatchMedi","ssrMatchMedia","supportMedia","window","matchMedia","theme","mediaQueries","query","matchQuery","q","_useState","matches","_useState2","state","setState","queryList","update","addListener","removeListener"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useMemo, useState } from 'react';\nimport useTheme from '../use-theme';\nimport { tuple } from '../utils/prop-types';\nvar breakpoints = tuple('xs', 'sm', 'md', 'lg', 'xl', 'mobile');\nvar matchType = tuple('up', 'down', 'default');\nvar defaultResponsiveOptions = {\n  match: 'default'\n};\n\nvar makeQueries = function makeQueries(bp, up, down) {\n  var queryString = function queryString(item) {\n    var upQuery = \"(min-width: \".concat(item.min, \")\");\n    var downQuery = \"(max-width: \".concat(item.max, \")\");\n    return up ? upQuery : down ? downQuery : \"\".concat(upQuery, \" and \").concat(downQuery);\n  };\n\n  var xs = queryString(bp.xs);\n  return {\n    xs: xs,\n    mobile: xs,\n    sm: queryString(bp.sm),\n    md: queryString(bp.md),\n    lg: queryString(bp.lg),\n    xl: queryString(bp.xl)\n  };\n};\n\nvar useMediaQuery = function useMediaQuery(breakpoint) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultResponsiveOptions;\n  var _options$match = options.match,\n      matchType = _options$match === void 0 ? 'default' : _options$match,\n      _options$ssrMatchMedi = options.ssrMatchMedia,\n      ssrMatchMedia = _options$ssrMatchMedi === void 0 ? null : _options$ssrMatchMedi;\n  var supportMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  var theme = useTheme();\n  var mediaQueries = useMemo(function () {\n    var up = matchType === 'up';\n    var down = matchType === 'down';\n    return makeQueries(theme.breakpoints, up, down);\n  }, [theme.breakpoints, options]);\n  var query = useMemo(function () {\n    return mediaQueries[breakpoint];\n  }, [mediaQueries, breakpoint]);\n\n  var matchQuery = function matchQuery(q) {\n    return window.matchMedia(q);\n  };\n  /**\n   * Do nothing in the server-side rendering.\n   * If server match query fucntion is simulated, return user-defined value first.\n   */\n\n\n  var _useState = useState(function () {\n    if (supportMedia) return matchQuery(query).matches;\n\n    if (ssrMatchMedia && typeof ssrMatchMedia === 'function') {\n      return ssrMatchMedia(query).matches;\n    }\n\n    return false;\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  useEffect(function () {\n    if (!supportMedia) return;\n    var queryList = matchQuery(query);\n\n    var update = function update() {\n      return setState(matchQuery(query).matches);\n    };\n\n    update();\n    /**\n     * addListener is deprecated. EventTarget.addEventListener is recommended.\n     * But in some old browsers, MediaQueryList does not inherit from EventTarget.\n     */\n\n    queryList.addListener(update);\n    return function () {\n      queryList.removeListener(update);\n    };\n  }, [supportMedia]);\n  return state;\n};\n\nexport default useMediaQuery;"]},"metadata":{},"sourceType":"module"}