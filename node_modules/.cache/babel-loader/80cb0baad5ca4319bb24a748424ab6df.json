{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { addColorAlpha } from '../utils/color';\nexport var getButtonGhostColors = function getButtonGhostColors(palette, type) {\n  var colors = {\n    secondary: {\n      bg: palette.background,\n      border: palette.foreground,\n      color: palette.foreground\n    },\n    success: {\n      bg: palette.background,\n      border: palette.success,\n      color: palette.success\n    },\n    warning: {\n      bg: palette.background,\n      border: palette.warning,\n      color: palette.warning\n    },\n    error: {\n      bg: palette.background,\n      border: palette.error,\n      color: palette.error\n    }\n  };\n  return colors[type] || null;\n};\nexport var getButtonColors = function getButtonColors(palette, props) {\n  var type = props.type,\n      disabled = props.disabled,\n      ghost = props.ghost;\n  var colors = {\n    \"default\": {\n      bg: palette.background,\n      border: palette.border,\n      color: palette.accents_5\n    },\n    secondary: {\n      bg: palette.foreground,\n      border: palette.foreground,\n      color: palette.background\n    },\n    success: {\n      bg: palette.success,\n      border: palette.success,\n      color: '#fff'\n    },\n    warning: {\n      bg: palette.warning,\n      border: palette.warning,\n      color: '#fff'\n    },\n    error: {\n      bg: palette.error,\n      border: palette.error,\n      color: '#fff'\n    },\n    abort: {\n      bg: 'transparent',\n      border: 'transparent',\n      color: palette.accents_5\n    }\n  };\n  if (disabled) return {\n    bg: palette.accents_1,\n    border: palette.accents_2,\n    color: '#ccc'\n  };\n  /**\n   * The '-light' type is the same color as the common type,\n   * only hover's color is different.\n   * e.g.\n   *   Color['success'] === Color['success-light']\n   *   Color['warning'] === Color['warning-light']\n   */\n\n  var withoutLightType = type.replace('-light', '');\n  var defaultColor = colors[\"default\"];\n  if (ghost) return getButtonGhostColors(palette, withoutLightType) || defaultColor;\n  return colors[withoutLightType] || defaultColor;\n};\nexport var getButtonGhostHoverColors = function getButtonGhostHoverColors(palette, type) {\n  var colors = {\n    secondary: {\n      bg: palette.foreground,\n      border: palette.background,\n      color: palette.background\n    },\n    success: {\n      bg: palette.success,\n      border: palette.background,\n      color: 'white'\n    },\n    warning: {\n      bg: palette.warning,\n      border: palette.background,\n      color: 'white'\n    },\n    error: {\n      bg: palette.error,\n      border: palette.background,\n      color: 'white'\n    }\n  };\n  var withoutLightType = type.replace('-light', '');\n  return colors[withoutLightType] || null;\n};\nexport var getButtonHoverColors = function getButtonHoverColors(palette, props) {\n  var type = props.type,\n      disabled = props.disabled,\n      loading = props.loading,\n      shadow = props.shadow,\n      ghost = props.ghost;\n  var defaultColor = getButtonColors(palette, props);\n  var alphaBackground = addColorAlpha(defaultColor.bg, 0.85);\n  var colors = {\n    \"default\": {\n      bg: palette.background,\n      border: palette.foreground\n    },\n    secondary: {\n      bg: palette.background,\n      border: palette.foreground\n    },\n    success: {\n      bg: palette.background,\n      border: palette.success\n    },\n    warning: {\n      bg: palette.background,\n      border: palette.warning\n    },\n    error: {\n      bg: palette.background,\n      border: palette.error\n    },\n    abort: {\n      bg: 'transparent',\n      border: 'transparent',\n      color: palette.accents_5\n    },\n    'secondary-light': _extends({}, defaultColor, {\n      bg: alphaBackground\n    }),\n    'success-light': _extends({}, defaultColor, {\n      bg: alphaBackground\n    }),\n    'warning-light': _extends({}, defaultColor, {\n      bg: alphaBackground\n    }),\n    'error-light': _extends({}, defaultColor, {\n      bg: alphaBackground\n    })\n  };\n  if (disabled) return {\n    bg: palette.accents_1,\n    border: palette.accents_2,\n    color: '#ccc'\n  };\n  if (loading) return _extends({}, defaultColor, {\n    color: 'transparent'\n  });\n  if (shadow) return defaultColor;\n  var hoverColor = (ghost ? getButtonGhostHoverColors(palette, type) : colors[type]) || colors[\"default\"];\n  return _extends({}, hoverColor, {\n    color: hoverColor.color || hoverColor.border\n  });\n};\nexport var getButtonCursor = function getButtonCursor(disabled, loading) {\n  if (disabled) return {\n    cursor: 'not-allowed',\n    events: 'auto'\n  };\n  if (loading) return {\n    cursor: 'default',\n    events: 'none'\n  };\n  return {\n    cursor: 'pointer',\n    events: 'auto'\n  };\n};\nexport var getButtonSize = function getButtonSize() {\n  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'medium';\n  var auto = arguments.length > 1 ? arguments[1] : undefined;\n  var defaultLayout = {\n    height: '2.5rem',\n    width: 'auto',\n    padding: '1.375rem',\n    fontSize: '.875rem',\n    minWidth: '12.5rem'\n  };\n  var autoPaddings = {\n    medium: '1.25rem',\n    mini: '0.625rem',\n    small: '0.9375rem',\n    large: '1.5625rem'\n  };\n  var layouts = {\n    mini: {\n      height: '1.5rem',\n      width: 'initial',\n      padding: '1.375rem',\n      fontSize: '.75rem',\n      minWidth: '5.25rem'\n    },\n    small: {\n      height: '2rem',\n      width: 'initial',\n      padding: '1.25rem',\n      fontSize: '.875rem',\n      minWidth: '9.375rem'\n    },\n    medium: defaultLayout,\n    large: {\n      height: '2.75rem',\n      width: 'initial',\n      padding: '1.875rem',\n      fontSize: '1rem',\n      minWidth: '15.625rem'\n    }\n  };\n  if (auto) return _extends({}, layouts[size] || defaultLayout, {\n    padding: autoPaddings[size] || autoPaddings.medium,\n    minWidth: 'min-content',\n    width: 'auto'\n  });\n  return layouts[size] || defaultLayout;\n};\nexport var getButtonDripColor = function getButtonDripColor(palette, props) {\n  var type = props.type;\n  var isLightHover = type.endsWith('light');\n  var hoverColors = getButtonHoverColors(palette, props);\n  return isLightHover ? addColorAlpha(hoverColors.bg, 0.65) : addColorAlpha(palette.accents_2, 0.65);\n};","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/node_modules/@geist-ui/react/esm/button/styles.js"],"names":["_extends","addColorAlpha","getButtonGhostColors","palette","type","colors","secondary","bg","background","border","foreground","color","success","warning","error","getButtonColors","props","disabled","ghost","accents_5","abort","accents_1","accents_2","withoutLightType","replace","defaultColor","getButtonGhostHoverColors","getButtonHoverColors","loading","shadow","alphaBackground","hoverColor","getButtonCursor","cursor","events","getButtonSize","size","arguments","length","undefined","auto","defaultLayout","height","width","padding","fontSize","minWidth","autoPaddings","medium","mini","small","large","layouts","getButtonDripColor","isLightHover","endsWith","hoverColors"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { addColorAlpha } from '../utils/color';\nexport var getButtonGhostColors = function getButtonGhostColors(palette, type) {\n  var colors = {\n    secondary: {\n      bg: palette.background,\n      border: palette.foreground,\n      color: palette.foreground\n    },\n    success: {\n      bg: palette.background,\n      border: palette.success,\n      color: palette.success\n    },\n    warning: {\n      bg: palette.background,\n      border: palette.warning,\n      color: palette.warning\n    },\n    error: {\n      bg: palette.background,\n      border: palette.error,\n      color: palette.error\n    }\n  };\n  return colors[type] || null;\n};\nexport var getButtonColors = function getButtonColors(palette, props) {\n  var type = props.type,\n      disabled = props.disabled,\n      ghost = props.ghost;\n  var colors = {\n    \"default\": {\n      bg: palette.background,\n      border: palette.border,\n      color: palette.accents_5\n    },\n    secondary: {\n      bg: palette.foreground,\n      border: palette.foreground,\n      color: palette.background\n    },\n    success: {\n      bg: palette.success,\n      border: palette.success,\n      color: '#fff'\n    },\n    warning: {\n      bg: palette.warning,\n      border: palette.warning,\n      color: '#fff'\n    },\n    error: {\n      bg: palette.error,\n      border: palette.error,\n      color: '#fff'\n    },\n    abort: {\n      bg: 'transparent',\n      border: 'transparent',\n      color: palette.accents_5\n    }\n  };\n  if (disabled) return {\n    bg: palette.accents_1,\n    border: palette.accents_2,\n    color: '#ccc'\n  };\n  /**\n   * The '-light' type is the same color as the common type,\n   * only hover's color is different.\n   * e.g.\n   *   Color['success'] === Color['success-light']\n   *   Color['warning'] === Color['warning-light']\n   */\n\n  var withoutLightType = type.replace('-light', '');\n  var defaultColor = colors[\"default\"];\n  if (ghost) return getButtonGhostColors(palette, withoutLightType) || defaultColor;\n  return colors[withoutLightType] || defaultColor;\n};\nexport var getButtonGhostHoverColors = function getButtonGhostHoverColors(palette, type) {\n  var colors = {\n    secondary: {\n      bg: palette.foreground,\n      border: palette.background,\n      color: palette.background\n    },\n    success: {\n      bg: palette.success,\n      border: palette.background,\n      color: 'white'\n    },\n    warning: {\n      bg: palette.warning,\n      border: palette.background,\n      color: 'white'\n    },\n    error: {\n      bg: palette.error,\n      border: palette.background,\n      color: 'white'\n    }\n  };\n  var withoutLightType = type.replace('-light', '');\n  return colors[withoutLightType] || null;\n};\nexport var getButtonHoverColors = function getButtonHoverColors(palette, props) {\n  var type = props.type,\n      disabled = props.disabled,\n      loading = props.loading,\n      shadow = props.shadow,\n      ghost = props.ghost;\n  var defaultColor = getButtonColors(palette, props);\n  var alphaBackground = addColorAlpha(defaultColor.bg, 0.85);\n  var colors = {\n    \"default\": {\n      bg: palette.background,\n      border: palette.foreground\n    },\n    secondary: {\n      bg: palette.background,\n      border: palette.foreground\n    },\n    success: {\n      bg: palette.background,\n      border: palette.success\n    },\n    warning: {\n      bg: palette.background,\n      border: palette.warning\n    },\n    error: {\n      bg: palette.background,\n      border: palette.error\n    },\n    abort: {\n      bg: 'transparent',\n      border: 'transparent',\n      color: palette.accents_5\n    },\n    'secondary-light': _extends({}, defaultColor, {\n      bg: alphaBackground\n    }),\n    'success-light': _extends({}, defaultColor, {\n      bg: alphaBackground\n    }),\n    'warning-light': _extends({}, defaultColor, {\n      bg: alphaBackground\n    }),\n    'error-light': _extends({}, defaultColor, {\n      bg: alphaBackground\n    })\n  };\n  if (disabled) return {\n    bg: palette.accents_1,\n    border: palette.accents_2,\n    color: '#ccc'\n  };\n  if (loading) return _extends({}, defaultColor, {\n    color: 'transparent'\n  });\n  if (shadow) return defaultColor;\n  var hoverColor = (ghost ? getButtonGhostHoverColors(palette, type) : colors[type]) || colors[\"default\"];\n  return _extends({}, hoverColor, {\n    color: hoverColor.color || hoverColor.border\n  });\n};\nexport var getButtonCursor = function getButtonCursor(disabled, loading) {\n  if (disabled) return {\n    cursor: 'not-allowed',\n    events: 'auto'\n  };\n  if (loading) return {\n    cursor: 'default',\n    events: 'none'\n  };\n  return {\n    cursor: 'pointer',\n    events: 'auto'\n  };\n};\nexport var getButtonSize = function getButtonSize() {\n  var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'medium';\n  var auto = arguments.length > 1 ? arguments[1] : undefined;\n  var defaultLayout = {\n    height: '2.5rem',\n    width: 'auto',\n    padding: '1.375rem',\n    fontSize: '.875rem',\n    minWidth: '12.5rem'\n  };\n  var autoPaddings = {\n    medium: '1.25rem',\n    mini: '0.625rem',\n    small: '0.9375rem',\n    large: '1.5625rem'\n  };\n  var layouts = {\n    mini: {\n      height: '1.5rem',\n      width: 'initial',\n      padding: '1.375rem',\n      fontSize: '.75rem',\n      minWidth: '5.25rem'\n    },\n    small: {\n      height: '2rem',\n      width: 'initial',\n      padding: '1.25rem',\n      fontSize: '.875rem',\n      minWidth: '9.375rem'\n    },\n    medium: defaultLayout,\n    large: {\n      height: '2.75rem',\n      width: 'initial',\n      padding: '1.875rem',\n      fontSize: '1rem',\n      minWidth: '15.625rem'\n    }\n  };\n  if (auto) return _extends({}, layouts[size] || defaultLayout, {\n    padding: autoPaddings[size] || autoPaddings.medium,\n    minWidth: 'min-content',\n    width: 'auto'\n  });\n  return layouts[size] || defaultLayout;\n};\nexport var getButtonDripColor = function getButtonDripColor(palette, props) {\n  var type = props.type;\n  var isLightHover = type.endsWith('light');\n  var hoverColors = getButtonHoverColors(palette, props);\n  return isLightHover ? addColorAlpha(hoverColors.bg, 0.65) : addColorAlpha(palette.accents_2, 0.65);\n};"]},"metadata":{},"sourceType":"module"}