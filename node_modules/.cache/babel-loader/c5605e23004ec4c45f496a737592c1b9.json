{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React, { useMemo } from 'react';\nimport { getIconPosition } from './placement';\nimport useTheme from '../use-theme';\n\nvar TooltipIcon = function TooltipIcon(_ref) {\n  var placement = _ref.placement,\n      bgColor = _ref.bgColor,\n      shadow = _ref.shadow;\n  var theme = useTheme();\n\n  var _useMemo = useMemo(function () {\n    return getIconPosition(placement, 3);\n  }, [placement]),\n      transform = _useMemo.transform,\n      top = _useMemo.top,\n      left = _useMemo.left,\n      right = _useMemo.right,\n      bottom = _useMemo.bottom;\n\n  var bgColorWithDark = useMemo(function () {\n    if (!shadow || theme.type !== 'dark') return bgColor;\n    return theme.palette.accents_2;\n  }, [theme.type, bgColor, shadow]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: _JSXStyle.dynamic([[\"2440507693\", [bgColorWithDark, left, top, right, bottom, transform]]])\n  }, /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2440507693\",\n    dynamic: [bgColorWithDark, left, top, right, bottom, transform]\n  }, \"span.__jsx-style-dynamic-selector{width:0;height:0;border-style:solid;border-width:6px 7px 6px 0;border-color:transparent \".concat(bgColorWithDark, \" transparent transparent;position:absolute;left:\").concat(left, \";top:\").concat(top, \";right:\").concat(right, \";bottom:\").concat(bottom, \";-webkit-transform:\").concat(transform, \";-ms-transform:\").concat(transform, \";transform:\").concat(transform, \";}\")));\n};\n\nexport default /*#__PURE__*/React.memo(TooltipIcon);","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/core-l/node_modules/@geist-ui/react/esm/tooltip/tooltip-icon.js"],"names":["_JSXStyle","React","useMemo","getIconPosition","useTheme","TooltipIcon","_ref","placement","bgColor","shadow","theme","_useMemo","transform","top","left","right","bottom","bgColorWithDark","type","palette","accents_2","createElement","className","dynamic","id","concat","memo"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,eAAT,QAAgC,aAAhC;AACA,OAAOC,QAAP,MAAqB,cAArB;;AAEA,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AAC3C,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;AAAA,MAEIC,MAAM,GAAGH,IAAI,CAACG,MAFlB;AAGA,MAAIC,KAAK,GAAGN,QAAQ,EAApB;;AAEA,MAAIO,QAAQ,GAAGT,OAAO,CAAC,YAAY;AACjC,WAAOC,eAAe,CAACI,SAAD,EAAY,CAAZ,CAAtB;AACD,GAFqB,EAEnB,CAACA,SAAD,CAFmB,CAAtB;AAAA,MAGIK,SAAS,GAAGD,QAAQ,CAACC,SAHzB;AAAA,MAIIC,GAAG,GAAGF,QAAQ,CAACE,GAJnB;AAAA,MAKIC,IAAI,GAAGH,QAAQ,CAACG,IALpB;AAAA,MAMIC,KAAK,GAAGJ,QAAQ,CAACI,KANrB;AAAA,MAOIC,MAAM,GAAGL,QAAQ,CAACK,MAPtB;;AASA,MAAIC,eAAe,GAAGf,OAAO,CAAC,YAAY;AACxC,QAAI,CAACO,MAAD,IAAWC,KAAK,CAACQ,IAAN,KAAe,MAA9B,EAAsC,OAAOV,OAAP;AACtC,WAAOE,KAAK,CAACS,OAAN,CAAcC,SAArB;AACD,GAH4B,EAG1B,CAACV,KAAK,CAACQ,IAAP,EAAaV,OAAb,EAAsBC,MAAtB,CAH0B,CAA7B;AAIA,SAAO,aAAaR,KAAK,CAACoB,aAAN,CAAoB,MAApB,EAA4B;AAC9CC,IAAAA,SAAS,EAAEtB,SAAS,CAACuB,OAAV,CAAkB,CAAC,CAAC,YAAD,EAAe,CAACN,eAAD,EAAkBH,IAAlB,EAAwBD,GAAxB,EAA6BE,KAA7B,EAAoCC,MAApC,EAA4CJ,SAA5C,CAAf,CAAD,CAAlB;AADmC,GAA5B,EAEjB,aAAaX,KAAK,CAACoB,aAAN,CAAoBrB,SAApB,EAA+B;AAC7CwB,IAAAA,EAAE,EAAE,YADyC;AAE7CD,IAAAA,OAAO,EAAE,CAACN,eAAD,EAAkBH,IAAlB,EAAwBD,GAAxB,EAA6BE,KAA7B,EAAoCC,MAApC,EAA4CJ,SAA5C;AAFoC,GAA/B,EAGb,6HAA6Ha,MAA7H,CAAoIR,eAApI,EAAqJ,kDAArJ,EAAyMQ,MAAzM,CAAgNX,IAAhN,EAAsN,OAAtN,EAA+NW,MAA/N,CAAsOZ,GAAtO,EAA2O,SAA3O,EAAsPY,MAAtP,CAA6PV,KAA7P,EAAoQ,UAApQ,EAAgRU,MAAhR,CAAuRT,MAAvR,EAA+R,qBAA/R,EAAsTS,MAAtT,CAA6Tb,SAA7T,EAAwU,iBAAxU,EAA2Va,MAA3V,CAAkWb,SAAlW,EAA6W,aAA7W,EAA4Xa,MAA5X,CAAmYb,SAAnY,EAA8Y,IAA9Y,CAHa,CAFI,CAApB;AAMD,CAzBD;;AA2BA,eAAe,aAAaX,KAAK,CAACyB,IAAN,CAAWrB,WAAX,CAA5B","sourcesContent":["import _JSXStyle from \"styled-jsx/style\";\nimport React, { useMemo } from 'react';\nimport { getIconPosition } from './placement';\nimport useTheme from '../use-theme';\n\nvar TooltipIcon = function TooltipIcon(_ref) {\n  var placement = _ref.placement,\n      bgColor = _ref.bgColor,\n      shadow = _ref.shadow;\n  var theme = useTheme();\n\n  var _useMemo = useMemo(function () {\n    return getIconPosition(placement, 3);\n  }, [placement]),\n      transform = _useMemo.transform,\n      top = _useMemo.top,\n      left = _useMemo.left,\n      right = _useMemo.right,\n      bottom = _useMemo.bottom;\n\n  var bgColorWithDark = useMemo(function () {\n    if (!shadow || theme.type !== 'dark') return bgColor;\n    return theme.palette.accents_2;\n  }, [theme.type, bgColor, shadow]);\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: _JSXStyle.dynamic([[\"2440507693\", [bgColorWithDark, left, top, right, bottom, transform]]])\n  }, /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"2440507693\",\n    dynamic: [bgColorWithDark, left, top, right, bottom, transform]\n  }, \"span.__jsx-style-dynamic-selector{width:0;height:0;border-style:solid;border-width:6px 7px 6px 0;border-color:transparent \".concat(bgColorWithDark, \" transparent transparent;position:absolute;left:\").concat(left, \";top:\").concat(top, \";right:\").concat(right, \";bottom:\").concat(bottom, \";-webkit-transform:\").concat(transform, \";-ms-transform:\").concat(transform, \";transform:\").concat(transform, \";}\")));\n};\n\nexport default /*#__PURE__*/React.memo(TooltipIcon);"]},"metadata":{},"sourceType":"module"}