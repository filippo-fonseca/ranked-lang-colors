{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/filippofonseca/Developer/open-source/ranked-lang-colors/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { CircularProgress } from '@material-ui/core';\nimport \"./App.css\";\nimport { Card, Text, Button, GeistProvider, CssBaseline } from \"@geist-ui/react\";\nimport { ArrowUp } from \"@geist-ui/react-icons\";\nimport { Container, ColorCircle, RankArea, LangArea } from \"../src/styles\";\nconst GET_TODOS = gql`\n  query getLangs {\n      languages {\n          id\n          name\n          hex\n      }\n  } \n`;\n\nconst App = () => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_TODOS);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: 50\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        h4: true,\n        children: \"Fetching data from API...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error fetching colors\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        h1: true,\n        children: \"Ranked Language Colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), data.languages.map(language => /*#__PURE__*/_jsxDEV(GeistProvider, {\n        theme: {\n          type: \"dark\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          style: {\n            display: \"flex\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              display: \"flex\",\n              margin: \"15px\",\n              marginRight: \"15px\",\n              flexDirection: \"row\",\n              justifyContent: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: [/*#__PURE__*/_jsxDEV(LangArea, {\n                children: [/*#__PURE__*/_jsxDEV(ColorCircle, {\n                  style: {\n                    backgroundColor: `${language.hex}`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  size: 17,\n                  children: language.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(RankArea, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: /*#__PURE__*/_jsxDEV(ArrowUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 29\n                  }, this),\n                  auto: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/src/App.js"],"names":["React","useQuery","gql","CircularProgress","Card","Text","Button","GeistProvider","CssBaseline","ArrowUp","Container","ColorCircle","RankArea","LangArea","GET_TODOS","App","data","loading","error","display","flexDirection","alignItems","marginTop","languages","map","language","type","margin","marginRight","justifyContent","backgroundColor","hex","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { CircularProgress } from '@material-ui/core';\nimport \"./App.css\";\nimport {\n  Card,\n  Text,\n  Button,\n  GeistProvider,\n  CssBaseline\n} from \"@geist-ui/react\";\nimport { ArrowUp } from \"@geist-ui/react-icons\";\nimport { Container, ColorCircle, RankArea, LangArea } from \"../src/styles\";\n\n\nconst GET_TODOS = gql`\n  query getLangs {\n      languages {\n          id\n          name\n          hex\n      }\n  } \n`\n\nconst App = () => {\n  const { data, loading, error } = useQuery(GET_TODOS);\n\n  if (loading) {\n    return (\n        <div style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            marginTop: 50\n        }}>\n            <CircularProgress/>\n            <Text h4>Fetching data from API...</Text>\n        </div>\n    );\n  } \n  if (error) return <div>Error fetching colors</div>\n\n\n  return (\n    <>\n    <div>\n      <Text h1>Ranked Language Colors</Text>\n    {data.languages.map(language => (\n      <GeistProvider theme={{ type: \"dark\" }}>\n      <CssBaseline />\n      <div\n        className=\"App\"\n        style={{\n          display: \"flex\"\n        }}\n      >\n        <Card\n          style={{\n            display: \"flex\",\n  \n            margin: \"15px\",\n            marginRight: \"15px\",\n            flexDirection: \"row\",\n            justifyContent: \"center\"\n          }}\n        >\n          <Container>\n            <LangArea>\n              <ColorCircle style={{ backgroundColor: `${language.hex}` }} />\n              <Text size={17}>{language.name}</Text>\n            </LangArea>\n            <RankArea>\n              <Button icon={<ArrowUp />} auto></Button>\n            </RankArea>\n          </Container>\n        </Card>\n      </div>\n    </GeistProvider>))}\n\n    </div>\n    </>\n    \n    \n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}