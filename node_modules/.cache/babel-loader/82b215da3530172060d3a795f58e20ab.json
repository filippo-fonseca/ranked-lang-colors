{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\n\nvar isBrowser = function isBrowser() {\n  return Boolean(typeof window !== 'undefined' && window.document && window.document.createElement);\n};\n\nvar useSSR = function useSSR() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      browser = _useState2[0],\n      setBrowser = _useState2[1];\n\n  useEffect(function () {\n    setBrowser(isBrowser());\n  }, []);\n  return {\n    isBrowser: browser,\n    isServer: !browser\n  };\n};\n\nexport default useSSR;","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/node_modules/@geist-ui/react/esm/utils/use-ssr.js"],"names":["_slicedToArray","useEffect","useState","isBrowser","Boolean","window","document","createElement","useSSR","_useState","_useState2","browser","setBrowser","isServer"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,IAAIC,SAAS,GAAG,SAASA,SAAT,GAAqB;AACnC,SAAOC,OAAO,CAAC,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAAxC,IAAoDD,MAAM,CAACC,QAAP,CAAgBC,aAArE,CAAd;AACD,CAFD;;AAIA,IAAIC,MAAM,GAAG,SAASA,MAAT,GAAkB;AAC7B,MAAIC,SAAS,GAAGP,QAAQ,CAAC,KAAD,CAAxB;AAAA,MACIQ,UAAU,GAAGV,cAAc,CAACS,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIE,OAAO,GAAGD,UAAU,CAAC,CAAD,CAFxB;AAAA,MAGIE,UAAU,GAAGF,UAAU,CAAC,CAAD,CAH3B;;AAKAT,EAAAA,SAAS,CAAC,YAAY;AACpBW,IAAAA,UAAU,CAACT,SAAS,EAAV,CAAV;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SAAO;AACLA,IAAAA,SAAS,EAAEQ,OADN;AAELE,IAAAA,QAAQ,EAAE,CAACF;AAFN,GAAP;AAID,CAbD;;AAeA,eAAeH,MAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\n\nvar isBrowser = function isBrowser() {\n  return Boolean(typeof window !== 'undefined' && window.document && window.document.createElement);\n};\n\nvar useSSR = function useSSR() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      browser = _useState2[0],\n      setBrowser = _useState2[1];\n\n  useEffect(function () {\n    setBrowser(isBrowser());\n  }, []);\n  return {\n    isBrowser: browser,\n    isServer: !browser\n  };\n};\n\nexport default useSSR;"]},"metadata":{},"sourceType":"module"}