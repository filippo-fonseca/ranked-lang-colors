{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport Input from '../input';\nimport AutoCompleteItem from './auto-complete-item';\nimport AutoCompleteDropdown from './auto-complete-dropdown';\nimport AutoCompleteSearching from './auto-complete-searching';\nimport AutoCompleteEmpty from './auto-complete-empty';\nimport { AutoCompleteContext } from './auto-complete-context';\nimport Loading from '../loading';\nimport { pickChild } from '../utils/collections';\nimport useCurrentState from '../utils/use-current-state';\nvar defaultProps = {\n  options: [],\n  initialValue: '',\n  disabled: false,\n  clearable: false,\n  size: 'medium',\n  disableMatchWidth: false,\n  disableFreeSolo: false,\n  className: ''\n};\n\nvar childrenToOptionsNode = function childrenToOptionsNode(options) {\n  return options.map(function (item, index) {\n    var key = \"auto-complete-item-\".concat(index);\n    if ( /*#__PURE__*/React.isValidElement(item)) return /*#__PURE__*/React.cloneElement(item, {\n      key: key\n    });\n    var validItem = item;\n    return /*#__PURE__*/React.createElement(AutoCompleteItem, {\n      key: key,\n      value: validItem.value,\n      isLabelOnly: true\n    }, validItem.label);\n  });\n}; // When the search is not set, the \"clearable\" icon can be displayed in the original location.\n// When the search is seted, at least one element should exist to avoid re-render.\n\n\nvar getSearchIcon = function getSearchIcon(searching) {\n  if (searching === undefined) return null;\n  return searching ? /*#__PURE__*/React.createElement(Loading, {\n    size: \"medium\"\n  }) : /*#__PURE__*/React.createElement(\"span\", null);\n};\n\nvar AutoComplete = function AutoComplete(_ref) {\n  var options = _ref.options,\n      customInitialValue = _ref.initialValue,\n      onSelect = _ref.onSelect,\n      onSearch = _ref.onSearch,\n      onChange = _ref.onChange,\n      searching = _ref.searching,\n      children = _ref.children,\n      size = _ref.size,\n      status = _ref.status,\n      value = _ref.value,\n      width = _ref.width,\n      clearable = _ref.clearable,\n      disabled = _ref.disabled,\n      dropdownClassName = _ref.dropdownClassName,\n      dropdownStyle = _ref.dropdownStyle,\n      disableMatchWidth = _ref.disableMatchWidth,\n      disableFreeSolo = _ref.disableFreeSolo,\n      props = _objectWithoutProperties(_ref, [\"options\", \"initialValue\", \"onSelect\", \"onSearch\", \"onChange\", \"searching\", \"children\", \"size\", \"status\", \"value\", \"width\", \"clearable\", \"disabled\", \"dropdownClassName\", \"dropdownStyle\", \"disableMatchWidth\", \"disableFreeSolo\"]);\n\n  var ref = useRef(null);\n  var inputRef = useRef(null);\n  var resetTimer = useRef();\n\n  var _useCurrentState = useCurrentState(customInitialValue),\n      _useCurrentState2 = _slicedToArray(_useCurrentState, 3),\n      state = _useCurrentState2[0],\n      setState = _useCurrentState2[1],\n      stateRef = _useCurrentState2[2];\n\n  var _useState = useState(customInitialValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectVal = _useState2[0],\n      setSelectVal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _pickChild = pickChild(children, AutoCompleteSearching),\n      _pickChild2 = _slicedToArray(_pickChild, 2),\n      searchChild = _pickChild2[1];\n\n  var _pickChild3 = pickChild(children, AutoCompleteEmpty),\n      _pickChild4 = _slicedToArray(_pickChild3, 2),\n      emptyChild = _pickChild4[1];\n\n  var autoCompleteItems = useMemo(function () {\n    var hasSearchChild = searchChild && React.Children.count(searchChild) > 0;\n    var hasEmptyChild = emptyChild && React.Children.count(emptyChild) > 0;\n\n    if (searching) {\n      return hasSearchChild ? searchChild : /*#__PURE__*/React.createElement(AutoCompleteSearching, null, \"Searching...\");\n    }\n\n    if (options.length === 0) {\n      if (state === '') return null;\n      return hasEmptyChild ? emptyChild : /*#__PURE__*/React.createElement(AutoCompleteEmpty, null, \"No Options\");\n    }\n\n    return childrenToOptionsNode(options);\n  }, [searching, options]);\n  var showClearIcon = useMemo(function () {\n    return clearable && searching === undefined;\n  }, [clearable, searching]);\n\n  var updateValue = function updateValue(val) {\n    if (disabled) return;\n    setSelectVal(val);\n    onSelect && onSelect(val);\n    setState(val);\n    inputRef.current && inputRef.current.focus();\n  };\n\n  var updateVisible = function updateVisible(next) {\n    return setVisible(next);\n  };\n\n  var onInputChange = function onInputChange(event) {\n    setVisible(true);\n    onSearch && onSearch(event.target.value);\n    setState(event.target.value);\n  };\n\n  var resetInputValue = function resetInputValue() {\n    if (!disableFreeSolo) return;\n    if (!state || state === '') return;\n\n    if (state !== selectVal) {\n      setState(selectVal);\n    }\n  };\n\n  useEffect(function () {\n    onChange && onChange(state);\n  }, [state]);\n  useEffect(function () {\n    if (value === undefined) return;\n    setState(value);\n  }, [value]);\n  var initialValue = useMemo(function () {\n    return {\n      ref: ref,\n      size: size,\n      value: state,\n      updateValue: updateValue,\n      visible: visible,\n      updateVisible: updateVisible\n    };\n  }, [state, visible, size]);\n\n  var toggleFocusHandler = function toggleFocusHandler(next) {\n    clearTimeout(resetTimer.current);\n    setVisible(next);\n\n    if (next) {\n      onSearch && onSearch(stateRef.current);\n    } else {\n      resetTimer.current = window.setTimeout(function () {\n        resetInputValue();\n        clearTimeout(resetTimer.current);\n      }, 100);\n    }\n  };\n\n  var inputProps = _extends({}, props, {\n    width: width,\n    disabled: disabled,\n    value: state\n  });\n\n  return /*#__PURE__*/React.createElement(AutoCompleteContext.Provider, {\n    value: initialValue\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: _JSXStyle.dynamic([[\"3000574876\", [width || 'max-content']]]) + \" \" + \"auto-complete\"\n  }, /*#__PURE__*/React.createElement(Input, _extends({\n    ref: inputRef,\n    size: size,\n    status: status,\n    onChange: onInputChange,\n    onFocus: function onFocus() {\n      return toggleFocusHandler(true);\n    },\n    onBlur: function onBlur() {\n      return toggleFocusHandler(false);\n    },\n    clearable: showClearIcon,\n    iconRight: getSearchIcon(searching)\n  }, inputProps)), /*#__PURE__*/React.createElement(AutoCompleteDropdown, {\n    visible: visible,\n    disableMatchWidth: disableMatchWidth,\n    className: dropdownClassName,\n    dropdownStyle: dropdownStyle\n  }, autoCompleteItems), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"3000574876\",\n    dynamic: [width || 'max-content']\n  }, \".auto-complete.__jsx-style-dynamic-selector{width:\".concat(width || 'max-content', \";}.auto-complete.__jsx-style-dynamic-selector .loading{left:-3px;right:-3px;width:-webkit-max-content;width:-moz-max-content;width:max-content;}\"))));\n};\n\nAutoComplete.defaultProps = defaultProps;\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/core-l/node_modules/@geist-ui/react/esm/auto-complete/auto-complete.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","_JSXStyle","React","useEffect","useMemo","useRef","useState","Input","AutoCompleteItem","AutoCompleteDropdown","AutoCompleteSearching","AutoCompleteEmpty","AutoCompleteContext","Loading","pickChild","useCurrentState","defaultProps","options","initialValue","disabled","clearable","size","disableMatchWidth","disableFreeSolo","className","childrenToOptionsNode","map","item","index","key","concat","isValidElement","cloneElement","validItem","createElement","value","isLabelOnly","label","getSearchIcon","searching","undefined","AutoComplete","_ref","customInitialValue","onSelect","onSearch","onChange","children","status","width","dropdownClassName","dropdownStyle","props","ref","inputRef","resetTimer","_useCurrentState","_useCurrentState2","state","setState","stateRef","_useState","_useState2","selectVal","setSelectVal","_useState3","_useState4","visible","setVisible","_pickChild","_pickChild2","searchChild","_pickChild3","_pickChild4","emptyChild","autoCompleteItems","hasSearchChild","Children","count","hasEmptyChild","length","showClearIcon","updateValue","val","current","focus","updateVisible","next","onInputChange","event","target","resetInputValue","toggleFocusHandler","clearTimeout","window","setTimeout","inputProps","Provider","dynamic","onFocus","onBlur","iconRight","id"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport Input from '../input';\nimport AutoCompleteItem from './auto-complete-item';\nimport AutoCompleteDropdown from './auto-complete-dropdown';\nimport AutoCompleteSearching from './auto-complete-searching';\nimport AutoCompleteEmpty from './auto-complete-empty';\nimport { AutoCompleteContext } from './auto-complete-context';\nimport Loading from '../loading';\nimport { pickChild } from '../utils/collections';\nimport useCurrentState from '../utils/use-current-state';\nvar defaultProps = {\n  options: [],\n  initialValue: '',\n  disabled: false,\n  clearable: false,\n  size: 'medium',\n  disableMatchWidth: false,\n  disableFreeSolo: false,\n  className: ''\n};\n\nvar childrenToOptionsNode = function childrenToOptionsNode(options) {\n  return options.map(function (item, index) {\n    var key = \"auto-complete-item-\".concat(index);\n    if ( /*#__PURE__*/React.isValidElement(item)) return /*#__PURE__*/React.cloneElement(item, {\n      key: key\n    });\n    var validItem = item;\n    return /*#__PURE__*/React.createElement(AutoCompleteItem, {\n      key: key,\n      value: validItem.value,\n      isLabelOnly: true\n    }, validItem.label);\n  });\n}; // When the search is not set, the \"clearable\" icon can be displayed in the original location.\n// When the search is seted, at least one element should exist to avoid re-render.\n\n\nvar getSearchIcon = function getSearchIcon(searching) {\n  if (searching === undefined) return null;\n  return searching ? /*#__PURE__*/React.createElement(Loading, {\n    size: \"medium\"\n  }) : /*#__PURE__*/React.createElement(\"span\", null);\n};\n\nvar AutoComplete = function AutoComplete(_ref) {\n  var options = _ref.options,\n      customInitialValue = _ref.initialValue,\n      onSelect = _ref.onSelect,\n      onSearch = _ref.onSearch,\n      onChange = _ref.onChange,\n      searching = _ref.searching,\n      children = _ref.children,\n      size = _ref.size,\n      status = _ref.status,\n      value = _ref.value,\n      width = _ref.width,\n      clearable = _ref.clearable,\n      disabled = _ref.disabled,\n      dropdownClassName = _ref.dropdownClassName,\n      dropdownStyle = _ref.dropdownStyle,\n      disableMatchWidth = _ref.disableMatchWidth,\n      disableFreeSolo = _ref.disableFreeSolo,\n      props = _objectWithoutProperties(_ref, [\"options\", \"initialValue\", \"onSelect\", \"onSearch\", \"onChange\", \"searching\", \"children\", \"size\", \"status\", \"value\", \"width\", \"clearable\", \"disabled\", \"dropdownClassName\", \"dropdownStyle\", \"disableMatchWidth\", \"disableFreeSolo\"]);\n\n  var ref = useRef(null);\n  var inputRef = useRef(null);\n  var resetTimer = useRef();\n\n  var _useCurrentState = useCurrentState(customInitialValue),\n      _useCurrentState2 = _slicedToArray(_useCurrentState, 3),\n      state = _useCurrentState2[0],\n      setState = _useCurrentState2[1],\n      stateRef = _useCurrentState2[2];\n\n  var _useState = useState(customInitialValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectVal = _useState2[0],\n      setSelectVal = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _pickChild = pickChild(children, AutoCompleteSearching),\n      _pickChild2 = _slicedToArray(_pickChild, 2),\n      searchChild = _pickChild2[1];\n\n  var _pickChild3 = pickChild(children, AutoCompleteEmpty),\n      _pickChild4 = _slicedToArray(_pickChild3, 2),\n      emptyChild = _pickChild4[1];\n\n  var autoCompleteItems = useMemo(function () {\n    var hasSearchChild = searchChild && React.Children.count(searchChild) > 0;\n    var hasEmptyChild = emptyChild && React.Children.count(emptyChild) > 0;\n\n    if (searching) {\n      return hasSearchChild ? searchChild : /*#__PURE__*/React.createElement(AutoCompleteSearching, null, \"Searching...\");\n    }\n\n    if (options.length === 0) {\n      if (state === '') return null;\n      return hasEmptyChild ? emptyChild : /*#__PURE__*/React.createElement(AutoCompleteEmpty, null, \"No Options\");\n    }\n\n    return childrenToOptionsNode(options);\n  }, [searching, options]);\n  var showClearIcon = useMemo(function () {\n    return clearable && searching === undefined;\n  }, [clearable, searching]);\n\n  var updateValue = function updateValue(val) {\n    if (disabled) return;\n    setSelectVal(val);\n    onSelect && onSelect(val);\n    setState(val);\n    inputRef.current && inputRef.current.focus();\n  };\n\n  var updateVisible = function updateVisible(next) {\n    return setVisible(next);\n  };\n\n  var onInputChange = function onInputChange(event) {\n    setVisible(true);\n    onSearch && onSearch(event.target.value);\n    setState(event.target.value);\n  };\n\n  var resetInputValue = function resetInputValue() {\n    if (!disableFreeSolo) return;\n    if (!state || state === '') return;\n\n    if (state !== selectVal) {\n      setState(selectVal);\n    }\n  };\n\n  useEffect(function () {\n    onChange && onChange(state);\n  }, [state]);\n  useEffect(function () {\n    if (value === undefined) return;\n    setState(value);\n  }, [value]);\n  var initialValue = useMemo(function () {\n    return {\n      ref: ref,\n      size: size,\n      value: state,\n      updateValue: updateValue,\n      visible: visible,\n      updateVisible: updateVisible\n    };\n  }, [state, visible, size]);\n\n  var toggleFocusHandler = function toggleFocusHandler(next) {\n    clearTimeout(resetTimer.current);\n    setVisible(next);\n\n    if (next) {\n      onSearch && onSearch(stateRef.current);\n    } else {\n      resetTimer.current = window.setTimeout(function () {\n        resetInputValue();\n        clearTimeout(resetTimer.current);\n      }, 100);\n    }\n  };\n\n  var inputProps = _extends({}, props, {\n    width: width,\n    disabled: disabled,\n    value: state\n  });\n\n  return /*#__PURE__*/React.createElement(AutoCompleteContext.Provider, {\n    value: initialValue\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    className: _JSXStyle.dynamic([[\"3000574876\", [width || 'max-content']]]) + \" \" + \"auto-complete\"\n  }, /*#__PURE__*/React.createElement(Input, _extends({\n    ref: inputRef,\n    size: size,\n    status: status,\n    onChange: onInputChange,\n    onFocus: function onFocus() {\n      return toggleFocusHandler(true);\n    },\n    onBlur: function onBlur() {\n      return toggleFocusHandler(false);\n    },\n    clearable: showClearIcon,\n    iconRight: getSearchIcon(searching)\n  }, inputProps)), /*#__PURE__*/React.createElement(AutoCompleteDropdown, {\n    visible: visible,\n    disableMatchWidth: disableMatchWidth,\n    className: dropdownClassName,\n    dropdownStyle: dropdownStyle\n  }, autoCompleteItems), /*#__PURE__*/React.createElement(_JSXStyle, {\n    id: \"3000574876\",\n    dynamic: [width || 'max-content']\n  }, \".auto-complete.__jsx-style-dynamic-selector{width:\".concat(width || 'max-content', \";}.auto-complete.__jsx-style-dynamic-selector .loading{left:-3px;right:-3px;width:-webkit-max-content;width:-moz-max-content;width:max-content;}\"))));\n};\n\nAutoComplete.defaultProps = defaultProps;\nexport default AutoComplete;"]},"metadata":{},"sourceType":"module"}