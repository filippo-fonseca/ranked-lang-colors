{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/filippofonseca/Developer/open-source/ranked-lang-colors/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { CircularProgress } from '@material-ui/core';\nimport { Row, Card, Link, Text } from \"@geist-ui/react\";\nimport \"./App.css\";\nconst GET_TODOS = gql`\n  query getLangs {\n      languages {\n          id\n          name\n          hex\n      }\n  } \n`;\n\nfunction App() {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_TODOS);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: 50\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        h4: true,\n        children: \"Fetching data from API...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error fetching colors\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.languages.map(language => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          width: \"330px\",\n          style: {\n            backgroundColor: `${language.hex}`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: language.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)\n      }, void 0, false))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        flexWrap: 'wrap'\n      },\n      justify: \"space-around\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        width: \"330px\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Geist UI React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Modern and minimalist React UI library.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            color: true,\n            target: \"_blank\",\n            href: \"https://github.com/geist-org/react\",\n            children: \"Visit source code on GitHub.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/src/App.js"],"names":["React","useQuery","gql","CircularProgress","Row","Card","Link","Text","GET_TODOS","App","data","loading","error","display","flexDirection","alignItems","marginTop","languages","map","language","backgroundColor","hex","name","flexWrap"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,IAApB,EAA0BC,IAA1B,QAAsC,iBAAtC;AACA,OAAO,WAAP;AAGA,MAAMC,SAAS,GAAGN,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,SAASO,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BX,QAAQ,CAACO,SAAD,CAAzC;;AAEA,MAAIG,OAAJ,EAAa;AACX,wBACI;AAAK,MAAA,KAAK,EAAE;AACRE,QAAAA,OAAO,EAAE,MADD;AAERC,QAAAA,aAAa,EAAE,QAFP;AAGRC,QAAAA,UAAU,EAAE,QAHJ;AAIRC,QAAAA,SAAS,EAAE;AAJH,OAAZ;AAAA,8BAMI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,IAAD;AAAM,QAAA,EAAE,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWD;;AACD,MAAIJ,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGX,sBACE;AAAA,4BACA;AAAA,gBACCF,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAmBC,QAAQ,iBAC1B;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,OAAZ;AAAoB,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAG,GAAED,QAAQ,CAACE,GAAI;AAAnC,WAA3B;AAAA,iCACF;AAAA,sBAAKF,QAAQ,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA;AADA,uBADD;AADD;AAAA;AAAA;AAAA;AAAA,YADA,eAUA,QAAC,GAAD;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAkC,MAAA,OAAO,EAAC,cAA1C;AAAA,6BACF,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,OAAZ;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,KAAK,MAAX;AAAY,YAAA,MAAM,EAAC,QAAnB;AAA4B,YAAA,IAAI,EAAC,oCAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA,kBADF;AAwBD;;GA3CQd,G;UAC0BR,Q;;;KAD1BQ,G;AA6CT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { CircularProgress } from '@material-ui/core';\nimport { Row, Card, Link, Text } from \"@geist-ui/react\";\nimport \"./App.css\";\n\n\nconst GET_TODOS = gql`\n  query getLangs {\n      languages {\n          id\n          name\n          hex\n      }\n  } \n`\n\nfunction App() {\n  const { data, loading, error } = useQuery(GET_TODOS);\n\n  if (loading) {\n    return (\n        <div style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            marginTop: 50\n        }}>\n            <CircularProgress/>\n            <Text h4>Fetching data from API...</Text>\n        </div>\n    );\n  } \n  if (error) return <div>Error fetching colors</div>\n\n\n  return (\n    <>\n    <div>\n    {data.languages.map(language => (\n      <>\n      <Card width=\"330px\" style={{ backgroundColor: `${language.hex}`}}>\n    <h4>{language.name}</h4>\n  </Card>\n       </>))}\n\n    </div>\n    <Row style={{ flexWrap: 'wrap' }} justify=\"space-around\">\n  <Card width=\"330px\">\n    <h4>Geist UI React</h4>\n    <p>Modern and minimalist React UI library.</p>\n    <Card.Footer>\n      <Link color target=\"_blank\" href=\"https://github.com/geist-org/react\">Visit source code on GitHub.</Link>\n    </Card.Footer>\n  </Card>\n  \n</Row>\n    </>\n    \n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}