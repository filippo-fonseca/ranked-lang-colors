{"ast":null,"code":"import React from 'react';\nimport { useTableContext } from './table-context';\n\nvar TableCell = function TableCell(_ref) {\n  var columns = _ref.columns,\n      row = _ref.row,\n      rowIndex = _ref.rowIndex,\n      emptyText = _ref.emptyText,\n      onCellClick = _ref.onCellClick;\n\n  var _useTableContext = useTableContext(),\n      removeRow = _useTableContext.removeRow,\n      updateRow = _useTableContext.updateRow;\n\n  var actions = {\n    update: function update(data) {\n      updateRow && updateRow(rowIndex, data);\n    },\n    remove: function remove() {\n      removeRow && removeRow(rowIndex);\n    }\n  };\n  /* eslint-disable react/jsx-no-useless-fragment */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, columns.map(function (column, index) {\n    var data = {\n      row: rowIndex,\n      column: index,\n      rowValue: row\n    };\n    var rowLabel = row[column.value];\n    var cellValue = !rowLabel ? emptyText : typeof rowLabel === 'function' ? rowLabel(actions, data) : rowLabel;\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: \"row-td-\".concat(index, \"-\").concat(column.value),\n      onClick: function onClick() {\n        return onCellClick(cellValue, rowIndex, index);\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cell\"\n    }, cellValue));\n  }));\n  /* eslint-enable */\n};\n\nexport default /*#__PURE__*/React.memo(TableCell);","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/core-l/node_modules/@geist-ui/react/esm/table/table-cell.js"],"names":["React","useTableContext","TableCell","_ref","columns","row","rowIndex","emptyText","onCellClick","_useTableContext","removeRow","updateRow","actions","update","data","remove","createElement","Fragment","map","column","index","rowValue","rowLabel","value","cellValue","key","concat","onClick","className","memo"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,iBAAhC;;AAEA,IAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AACvC,MAAIC,OAAO,GAAGD,IAAI,CAACC,OAAnB;AAAA,MACIC,GAAG,GAAGF,IAAI,CAACE,GADf;AAAA,MAEIC,QAAQ,GAAGH,IAAI,CAACG,QAFpB;AAAA,MAGIC,SAAS,GAAGJ,IAAI,CAACI,SAHrB;AAAA,MAIIC,WAAW,GAAGL,IAAI,CAACK,WAJvB;;AAMA,MAAIC,gBAAgB,GAAGR,eAAe,EAAtC;AAAA,MACIS,SAAS,GAAGD,gBAAgB,CAACC,SADjC;AAAA,MAEIC,SAAS,GAAGF,gBAAgB,CAACE,SAFjC;;AAIA,MAAIC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AAC5BH,MAAAA,SAAS,IAAIA,SAAS,CAACL,QAAD,EAAWQ,IAAX,CAAtB;AACD,KAHW;AAIZC,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxBL,MAAAA,SAAS,IAAIA,SAAS,CAACJ,QAAD,CAAtB;AACD;AANW,GAAd;AAQA;;AAEA,SAAO,aAAaN,KAAK,CAACgB,aAAN,CAAoBhB,KAAK,CAACiB,QAA1B,EAAoC,IAApC,EAA0Cb,OAAO,CAACc,GAAR,CAAY,UAAUC,MAAV,EAAkBC,KAAlB,EAAyB;AACjG,QAAIN,IAAI,GAAG;AACTT,MAAAA,GAAG,EAAEC,QADI;AAETa,MAAAA,MAAM,EAAEC,KAFC;AAGTC,MAAAA,QAAQ,EAAEhB;AAHD,KAAX;AAKA,QAAIiB,QAAQ,GAAGjB,GAAG,CAACc,MAAM,CAACI,KAAR,CAAlB;AACA,QAAIC,SAAS,GAAG,CAACF,QAAD,GAAYf,SAAZ,GAAwB,OAAOe,QAAP,KAAoB,UAApB,GAAiCA,QAAQ,CAACV,OAAD,EAAUE,IAAV,CAAzC,GAA2DQ,QAAnG;AACA,WAAO,aAAatB,KAAK,CAACgB,aAAN,CAAoB,IAApB,EAA0B;AAC5CS,MAAAA,GAAG,EAAE,UAAUC,MAAV,CAAiBN,KAAjB,EAAwB,GAAxB,EAA6BM,MAA7B,CAAoCP,MAAM,CAACI,KAA3C,CADuC;AAE5CI,MAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,eAAOnB,WAAW,CAACgB,SAAD,EAAYlB,QAAZ,EAAsBc,KAAtB,CAAlB;AACD;AAJ2C,KAA1B,EAKjB,aAAapB,KAAK,CAACgB,aAAN,CAAoB,KAApB,EAA2B;AACzCY,MAAAA,SAAS,EAAE;AAD8B,KAA3B,EAEbJ,SAFa,CALI,CAApB;AAQD,GAhB6D,CAA1C,CAApB;AAiBA;AACD,CAvCD;;AAyCA,eAAe,aAAaxB,KAAK,CAAC6B,IAAN,CAAW3B,SAAX,CAA5B","sourcesContent":["import React from 'react';\nimport { useTableContext } from './table-context';\n\nvar TableCell = function TableCell(_ref) {\n  var columns = _ref.columns,\n      row = _ref.row,\n      rowIndex = _ref.rowIndex,\n      emptyText = _ref.emptyText,\n      onCellClick = _ref.onCellClick;\n\n  var _useTableContext = useTableContext(),\n      removeRow = _useTableContext.removeRow,\n      updateRow = _useTableContext.updateRow;\n\n  var actions = {\n    update: function update(data) {\n      updateRow && updateRow(rowIndex, data);\n    },\n    remove: function remove() {\n      removeRow && removeRow(rowIndex);\n    }\n  };\n  /* eslint-disable react/jsx-no-useless-fragment */\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, columns.map(function (column, index) {\n    var data = {\n      row: rowIndex,\n      column: index,\n      rowValue: row\n    };\n    var rowLabel = row[column.value];\n    var cellValue = !rowLabel ? emptyText : typeof rowLabel === 'function' ? rowLabel(actions, data) : rowLabel;\n    return /*#__PURE__*/React.createElement(\"td\", {\n      key: \"row-td-\".concat(index, \"-\").concat(column.value),\n      onClick: function onClick() {\n        return onCellClick(cellValue, rowIndex, index);\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cell\"\n    }, cellValue));\n  }));\n  /* eslint-enable */\n};\n\nexport default /*#__PURE__*/React.memo(TableCell);"]},"metadata":{},"sourceType":"module"}