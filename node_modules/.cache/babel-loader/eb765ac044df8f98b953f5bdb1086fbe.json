{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/filippofonseca/Developer/open-source/ranked-lang-colors/core-l/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { CircularProgress } from '@material-ui/core';\nimport { Text } from \"@geist-ui/react\";\nconst GET_TODOS = gql`\n  query getLangs {\n      languages {\n          id\n          name\n          hex\n      }\n  } \n`;\n\nfunction App() {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_TODOS);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: 50\n      },\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        h4: true,\n        children: \"Fetching data from API...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this);\n  }\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Error fetching colors\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: data.languages.map(language => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: language.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: `${language.hex}`,\n            width: \"5rem\"\n          },\n          children: \"Hello World\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/core-l/src/App.js"],"names":["React","useQuery","gql","CircularProgress","Text","GET_TODOS","App","data","loading","error","display","flexDirection","alignItems","marginTop","languages","map","language","name","backgroundColor","hex","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,IAAT,QAAqB,iBAArB;AAGA,MAAMC,SAAS,GAAGH,GAAI;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,SAASI,GAAT,GAAe;AAAA;;AACb,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACI,SAAD,CAAzC;;AAEA,MAAIG,OAAJ,EAAa;AACX,wBACI;AAAK,MAAA,KAAK,EAAE;AACRE,QAAAA,OAAO,EAAE,MADD;AAERC,QAAAA,aAAa,EAAE,QAFP;AAGRC,QAAAA,UAAU,EAAE,QAHJ;AAIRC,QAAAA,SAAS,EAAE;AAJH,OAAZ;AAAA,8BAMI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,IAAD;AAAM,QAAA,EAAE,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWD;;AACD,MAAIJ,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAGX,sBACE;AAAA,2BACA;AAAA,gBACCF,IAAI,CAACO,SAAL,CAAeC,GAAf,CAAmBC,QAAQ,iBAC1B;AAAA,gCACA;AAAA,oBAAKA,QAAQ,CAACC;AAAd;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAG,GAAEF,QAAQ,CAACG,GAAI,EAAnC;AAAsCC,YAAAA,KAAK,EAAE;AAA7C,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA,sBADD;AADD;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAYD;;GA/BQd,G;UAC0BL,Q;;;KAD1BK,G;AAiCT,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { gql } from 'apollo-boost';\nimport { CircularProgress } from '@material-ui/core';\nimport { Text } from \"@geist-ui/react\";\n\n\nconst GET_TODOS = gql`\n  query getLangs {\n      languages {\n          id\n          name\n          hex\n      }\n  } \n`\n\nfunction App() {\n  const { data, loading, error } = useQuery(GET_TODOS);\n\n  if (loading) {\n    return (\n        <div style={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            marginTop: 50\n        }}>\n            <CircularProgress/>\n            <Text h4>Fetching data from API...</Text>\n        </div>\n    );\n  } \n  if (error) return <div>Error fetching colors</div>\n\n\n  return (\n    <>\n    <div>\n    {data.languages.map(language => (\n      <>\n      <h1>{language.name}</h1>\n      <div style={{ backgroundColor: `${language.hex}`, width: \"5rem\" }}>Hello World</div>\n       </>))}\n    </div>\n    </>\n    \n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}