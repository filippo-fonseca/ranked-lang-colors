{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useRef, useState } from 'react';\nvar defaultOptions = {\n  scrollLayer: false\n};\nvar elementStack = new Map();\n\nvar isIos = function isIos() {\n  /* istanbul ignore next */\n  if (typeof window === 'undefined' || !window.navigator) return false;\n  return /iP(ad|hone|od)/.test(window.navigator.platform);\n};\n\nvar touchHandler = function touchHandler(event) {\n  if (event.touches && event.touches.length > 1) return true;\n  event.preventDefault();\n  return false;\n};\n\nvar useBodyScroll = function useBodyScroll(elementRef, options) {\n  /* istanbul ignore next */\n  if (typeof document === 'undefined') return [false, function (t) {\n    return t;\n  }];\n  var elRef = elementRef || useRef(document.body);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidden = _useState2[0],\n      setHidden = _useState2[1];\n\n  var safeOptions = _extends({}, defaultOptions, options || {}); // don't prevent touch event when layer contain scroll\n\n\n  var isIosWithCustom = function isIosWithCustom() {\n    if (safeOptions.scrollLayer) return false;\n    return isIos();\n  };\n\n  useEffect(function () {\n    if (!elRef || !elRef.current) return;\n    var lastOverflow = elRef.current.style.overflow;\n\n    if (hidden) {\n      if (elementStack.has(elRef.current)) return;\n\n      if (!isIosWithCustom()) {\n        elRef.current.style.overflow = 'hidden';\n      } else {\n        document.addEventListener('touchmove', touchHandler, {\n          passive: false\n        });\n      }\n\n      elementStack.set(elRef.current, {\n        last: lastOverflow\n      });\n      return;\n    } // reset element overflow\n\n\n    if (!elementStack.has(elRef.current)) return;\n\n    if (!isIosWithCustom()) {\n      var store = elementStack.get(elRef.current);\n      elRef.current.style.overflow = store.last;\n    } else {\n      document.removeEventListener('touchmove', touchHandler);\n    }\n\n    elementStack[\"delete\"](elRef.current);\n  }, [hidden, elRef]);\n  return [hidden, setHidden];\n};\n\nexport default useBodyScroll;","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/node_modules/@geist-ui/react/esm/use-body-scroll/use-body-scroll.js"],"names":["_extends","_slicedToArray","useEffect","useRef","useState","defaultOptions","scrollLayer","elementStack","Map","isIos","window","navigator","test","platform","touchHandler","event","touches","length","preventDefault","useBodyScroll","elementRef","options","document","t","elRef","body","_useState","_useState2","hidden","setHidden","safeOptions","isIosWithCustom","current","lastOverflow","style","overflow","has","addEventListener","passive","set","last","store","get","removeEventListener"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useRef, useState } from 'react';\nvar defaultOptions = {\n  scrollLayer: false\n};\nvar elementStack = new Map();\n\nvar isIos = function isIos() {\n  /* istanbul ignore next */\n  if (typeof window === 'undefined' || !window.navigator) return false;\n  return /iP(ad|hone|od)/.test(window.navigator.platform);\n};\n\nvar touchHandler = function touchHandler(event) {\n  if (event.touches && event.touches.length > 1) return true;\n  event.preventDefault();\n  return false;\n};\n\nvar useBodyScroll = function useBodyScroll(elementRef, options) {\n  /* istanbul ignore next */\n  if (typeof document === 'undefined') return [false, function (t) {\n    return t;\n  }];\n  var elRef = elementRef || useRef(document.body);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hidden = _useState2[0],\n      setHidden = _useState2[1];\n\n  var safeOptions = _extends({}, defaultOptions, options || {}); // don't prevent touch event when layer contain scroll\n\n\n  var isIosWithCustom = function isIosWithCustom() {\n    if (safeOptions.scrollLayer) return false;\n    return isIos();\n  };\n\n  useEffect(function () {\n    if (!elRef || !elRef.current) return;\n    var lastOverflow = elRef.current.style.overflow;\n\n    if (hidden) {\n      if (elementStack.has(elRef.current)) return;\n\n      if (!isIosWithCustom()) {\n        elRef.current.style.overflow = 'hidden';\n      } else {\n        document.addEventListener('touchmove', touchHandler, {\n          passive: false\n        });\n      }\n\n      elementStack.set(elRef.current, {\n        last: lastOverflow\n      });\n      return;\n    } // reset element overflow\n\n\n    if (!elementStack.has(elRef.current)) return;\n\n    if (!isIosWithCustom()) {\n      var store = elementStack.get(elRef.current);\n      elRef.current.style.overflow = store.last;\n    } else {\n      document.removeEventListener('touchmove', touchHandler);\n    }\n\n    elementStack[\"delete\"](elRef.current);\n  }, [hidden, elRef]);\n  return [hidden, setHidden];\n};\n\nexport default useBodyScroll;"]},"metadata":{},"sourceType":"module"}