{"ast":null,"code":"import { useEffect } from 'react';\n\nvar useDOMObserver = function useDOMObserver(ref) {\n  var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n  var config = {\n    attributes: false,\n    childList: true,\n    subtree: true\n  };\n  useEffect(function () {\n    if (!ref || !ref.current) return;\n    var unmount = false;\n\n    var done = function done() {\n      if (unmount) return;\n      callback.apply(void 0, arguments);\n    };\n\n    var observer = new MutationObserver(done);\n    observer.observe(ref.current, config);\n    return function () {\n      unmount = true;\n      observer.disconnect();\n    };\n  }, [ref]);\n};\n\nexport default useDOMObserver;","map":{"version":3,"sources":["/Users/filippofonseca/Developer/open-source/ranked-lang-colors/core-l/node_modules/@geist-ui/react/esm/utils/use-dom-observer.js"],"names":["useEffect","useDOMObserver","ref","callback","arguments","length","undefined","config","attributes","childList","subtree","current","unmount","done","apply","observer","MutationObserver","observe","disconnect"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,GAAxB,EAA6B;AAChD,MAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,YAAY,CAAE,CAAjG;AACA,MAAIG,MAAM,GAAG;AACXC,IAAAA,UAAU,EAAE,KADD;AAEXC,IAAAA,SAAS,EAAE,IAFA;AAGXC,IAAAA,OAAO,EAAE;AAHE,GAAb;AAKAV,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI,CAACE,GAAD,IAAQ,CAACA,GAAG,CAACS,OAAjB,EAA0B;AAC1B,QAAIC,OAAO,GAAG,KAAd;;AAEA,QAAIC,IAAI,GAAG,SAASA,IAAT,GAAgB;AACzB,UAAID,OAAJ,EAAa;AACbT,MAAAA,QAAQ,CAACW,KAAT,CAAe,KAAK,CAApB,EAAuBV,SAAvB;AACD,KAHD;;AAKA,QAAIW,QAAQ,GAAG,IAAIC,gBAAJ,CAAqBH,IAArB,CAAf;AACAE,IAAAA,QAAQ,CAACE,OAAT,CAAiBf,GAAG,CAACS,OAArB,EAA8BJ,MAA9B;AACA,WAAO,YAAY;AACjBK,MAAAA,OAAO,GAAG,IAAV;AACAG,MAAAA,QAAQ,CAACG,UAAT;AACD,KAHD;AAID,GAfQ,EAeN,CAAChB,GAAD,CAfM,CAAT;AAgBD,CAvBD;;AAyBA,eAAeD,cAAf","sourcesContent":["import { useEffect } from 'react';\n\nvar useDOMObserver = function useDOMObserver(ref) {\n  var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n  var config = {\n    attributes: false,\n    childList: true,\n    subtree: true\n  };\n  useEffect(function () {\n    if (!ref || !ref.current) return;\n    var unmount = false;\n\n    var done = function done() {\n      if (unmount) return;\n      callback.apply(void 0, arguments);\n    };\n\n    var observer = new MutationObserver(done);\n    observer.observe(ref.current, config);\n    return function () {\n      unmount = true;\n      observer.disconnect();\n    };\n  }, [ref]);\n};\n\nexport default useDOMObserver;"]},"metadata":{},"sourceType":"module"}