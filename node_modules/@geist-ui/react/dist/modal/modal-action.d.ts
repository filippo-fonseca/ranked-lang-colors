import React, { MouseEvent, PropsWithoutRef, RefAttributes } from 'react';
import { ButtonProps } from '../button/button';
declare type ModalActionEvent = MouseEvent<HTMLButtonElement> & {
    close: () => void;
};
interface Props {
    className?: string;
    passive?: boolean;
    disabled?: boolean;
    onClick?: (event: ModalActionEvent) => void;
}
declare const defaultProps: {
    className: string;
    passive: boolean;
    disabled: boolean;
};
export declare type ModalActionProps = Props & typeof defaultProps & Omit<ButtonProps, keyof Props>;
declare type ModalActionComponent<T, P = {}> = React.ForwardRefExoticComponent<PropsWithoutRef<P> & RefAttributes<T>>;
declare type ComponentProps = Partial<typeof defaultProps> & Omit<Props, keyof typeof defaultProps> & Partial<Omit<ButtonProps, keyof Props>>;
declare const _default: ModalActionComponent<HTMLButtonElement, ComponentProps>;
export default _default;
