export declare const tuple: <T extends string[]>(...args: T) => T;
declare const buttonTypes: ["default", "secondary", "success", "warning", "error", "abort", "secondary-light", "success-light", "warning-light", "error-light"];
declare const normalSizes: ["mini", "small", "medium", "large"];
declare const normalTypes: ["default", "secondary", "success", "warning", "error"];
declare const themeTypes: ["dark", "light"];
declare const snippetTypes: ["default", "secondary", "success", "warning", "error", "dark", "lite"];
declare const cardTypes: ["default", "secondary", "success", "warning", "error", "dark", "lite", "alert", "purple", "violet", "cyan"];
declare const copyTypes: ["default", "slient", "prevent"];
declare const triggerTypes: ["hover", "click"];
declare const placement: ["top", "topStart", "topEnd", "left", "leftStart", "leftEnd", "bottom", "bottomStart", "bottomEnd", "right", "rightStart", "rightEnd"];
declare const dividerAlign: ["start", "center", "end", "left", "right"];
export declare type ButtonTypes = typeof buttonTypes[number];
export declare type NormalSizes = typeof normalSizes[number];
export declare type NormalTypes = typeof normalTypes[number];
export declare type ThemeTypes = typeof themeTypes[number];
export declare type SnippetTypes = typeof snippetTypes[number];
export declare type CardTypes = typeof cardTypes[number];
export declare type CopyTypes = typeof copyTypes[number];
export declare type TriggerTypes = typeof triggerTypes[number];
export declare type Placement = typeof placement[number];
export declare type DividerAlign = typeof dividerAlign[number];
export {};
